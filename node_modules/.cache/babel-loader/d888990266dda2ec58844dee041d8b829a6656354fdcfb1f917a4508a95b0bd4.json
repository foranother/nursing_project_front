{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/Home.vue';\nimport Login from '../views/Login.vue';\nimport Register from '../views/Register.vue';\nimport ScenarioList from '../views/ScenarioList.vue';\nimport ScenarioDetail from '../views/ScenarioDetail.vue';\nimport ScenarioCreate from '../views/ScenarioCreate.vue';\nimport ScenarioModify from '../views/ScenarioModify.vue';\nimport store from '../store';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  meta: {\n    guestOnly: true\n  }\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  meta: {\n    guestOnly: true\n  }\n}, {\n  path: '/scenarios',\n  name: 'ScenarioList',\n  component: ScenarioList\n}, {\n  path: '/scenarios/:id',\n  name: 'ScenarioDetail',\n  component: ScenarioDetail,\n  props: true\n}, {\n  path: '/create',\n  name: 'ScenarioCreate',\n  component: ScenarioCreate,\n  meta: {\n    requiresAdmin: true\n  }\n}, {\n  path: '/scenarios/:id/modify',\n  name: 'ScenarioModify',\n  component: ScenarioModify,\n  props: true,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\n// 네비게이션 가드 설정\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = store.getters.isLoggedIn;\n  const isAdmin = store.getters.isAdmin;\n\n  // 관리자 권한이 필요한 페이지\n  if (to.matched.some(record => record.meta.requiresAdmin)) {\n    if (!isLoggedIn || !isAdmin) {\n      next({\n        name: 'Login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  }\n  // 인증이 필요한 페이지\n  else if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isLoggedIn) {\n      next({\n        name: 'Login',\n        query: {\n          redirect: to.fullPath\n        }\n      });\n    } else {\n      next();\n    }\n  }\n  // 게스트만 접근 가능한 페이지 (로그인, 회원가입)\n  else if (to.matched.some(record => record.meta.guestOnly)) {\n    if (isLoggedIn) {\n      next({\n        name: 'Home'\n      });\n    } else {\n      next();\n    }\n  }\n  // 그 외 페이지\n  else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","Login","Register","ScenarioList","ScenarioDetail","ScenarioCreate","ScenarioModify","store","routes","path","name","component","meta","guestOnly","props","requiresAdmin","requiresAuth","router","history","process","env","BASE_URL","beforeEach","to","from","next","isLoggedIn","getters","isAdmin","matched","some","record","query","redirect","fullPath"],"sources":["D:/간호시뮬레이션/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\r\nimport Home from '../views/Home.vue'\r\nimport Login from '../views/Login.vue'\r\nimport Register from '../views/Register.vue'\r\nimport ScenarioList from '../views/ScenarioList.vue'\r\nimport ScenarioDetail from '../views/ScenarioDetail.vue'\r\nimport ScenarioCreate from '../views/ScenarioCreate.vue'\r\nimport ScenarioModify from '../views/ScenarioModify.vue'\r\nimport store from '../store'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    name: 'Home',\r\n    component: Home\r\n  },\r\n  {\r\n    path: '/login',\r\n    name: 'Login',\r\n    component: Login,\r\n    meta: { guestOnly: true }\r\n  },\r\n  {\r\n    path: '/register',\r\n    name: 'Register',\r\n    component: Register,\r\n    meta: { guestOnly: true }\r\n  },\r\n  {\r\n    path: '/scenarios',\r\n    name: 'ScenarioList',\r\n    component: ScenarioList\r\n  },\r\n  {\r\n    path: '/scenarios/:id',\r\n    name: 'ScenarioDetail',\r\n    component: ScenarioDetail,\r\n    props: true\r\n  },\r\n  {\r\n    path: '/create',\r\n    name: 'ScenarioCreate',\r\n    component: ScenarioCreate,\r\n    meta: { requiresAdmin: true }\r\n  },\r\n  {\r\n    path: '/scenarios/:id/modify',\r\n    name: 'ScenarioModify',\r\n    component: ScenarioModify,\r\n    props: true,\r\n    meta: { requiresAuth: true }\r\n  }\r\n]\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(process.env.BASE_URL),\r\n  routes\r\n})\r\n\r\n// 네비게이션 가드 설정\r\nrouter.beforeEach((to, from, next) => {\r\n  const isLoggedIn = store.getters.isLoggedIn\r\n  const isAdmin = store.getters.isAdmin\r\n  \r\n  // 관리자 권한이 필요한 페이지\r\n  if (to.matched.some(record => record.meta.requiresAdmin)) {\r\n    if (!isLoggedIn || !isAdmin) {\r\n      next({ name: 'Login', query: { redirect: to.fullPath } })\r\n    } else {\r\n      next()\r\n    }\r\n  }\r\n  // 인증이 필요한 페이지\r\n  else if (to.matched.some(record => record.meta.requiresAuth)) {\r\n    if (!isLoggedIn) {\r\n      next({ name: 'Login', query: { redirect: to.fullPath } })\r\n    } else {\r\n      next()\r\n    }\r\n  }\r\n  // 게스트만 접근 가능한 페이지 (로그인, 회원가입)\r\n  else if (to.matched.some(record => record.meta.guestOnly)) {\r\n    if (isLoggedIn) {\r\n      next({ name: 'Home' })\r\n    } else {\r\n      next()\r\n    }\r\n  }\r\n  // 그 외 페이지\r\n  else {\r\n    next()\r\n  }\r\n})\r\n\r\nexport default router "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}