{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      form: {\n        email: '',\n        password: ''\n      }\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'error'])\n  },\n  methods: {\n    async login() {\n      try {\n        await this.$store.dispatch('login', this.form);\n\n        // 리다이렉트 처리\n        const redirectPath = this.$route.query.redirect || '/';\n        this.$router.push(redirectPath);\n      } catch (error) {\n        console.error('로그인 실패:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","form","email","password","computed","methods","login","$store","dispatch","redirectPath","$route","query","redirect","$router","push","error","console"],"sources":["D:\\간호시뮬레이션\\frontend\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-page\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header bg-primary text-white text-center\">\r\n        <h1 class=\"h4 mb-0\">로그인</h1>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div v-if=\"error\" class=\"alert alert-danger\">\r\n          {{ error }}\r\n        </div>\r\n        \r\n        <form @submit.prevent=\"login\">\r\n          <div class=\"mb-3\">\r\n            <label for=\"email\" class=\"form-label\">이메일</label>\r\n            <input \r\n              type=\"email\" \r\n              class=\"form-control\" \r\n              id=\"email\" \r\n              v-model=\"form.email\" \r\n              required\r\n              :disabled=\"loading\"\r\n            >\r\n          </div>\r\n          \r\n          <div class=\"mb-4\">\r\n            <label for=\"password\" class=\"form-label\">비밀번호</label>\r\n            <input \r\n              type=\"password\" \r\n              class=\"form-control\" \r\n              id=\"password\" \r\n              v-model=\"form.password\" \r\n              required\r\n              :disabled=\"loading\"\r\n            >\r\n          </div>\r\n          \r\n          <div class=\"d-grid\">\r\n            <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n              <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n              로그인\r\n            </button>\r\n          </div>\r\n        </form>\r\n        \r\n        <div class=\"mt-4 text-center\">\r\n          <p>계정이 없으신가요? <router-link :to=\"{ name: 'Register' }\">회원가입</router-link></p>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      form: {\r\n        email: '',\r\n        password: ''\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoading', 'error'])\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        await this.$store.dispatch('login', this.form)\r\n        \r\n        // 리다이렉트 처리\r\n        const redirectPath = this.$route.query.redirect || '/'\r\n        this.$router.push(redirectPath)\r\n      } catch (error) {\r\n        console.error('로그인 실패:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-page {\r\n  max-width: 450px;\r\n  margin: 2rem auto;\r\n}\r\n\r\n.card {\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-header {\r\n  padding: 1.5rem;\r\n  border-radius: 10px 10px 0 0;\r\n}\r\n\r\n.card-body {\r\n  padding: 2rem;\r\n}\r\n</style> "],"mappings":"AAsDA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACZ;IACF;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGN,UAAU,CAAC,CAAC,WAAW,EAAE,OAAO,CAAC;EACtC,CAAC;EACDO,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAACP,IAAI;;QAE7C;QACA,MAAMQ,YAAW,GAAI,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAO,IAAK,GAAE;QACrD,IAAI,CAACC,OAAO,CAACC,IAAI,CAACL,YAAY;MAChC,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK;MAChC;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}