{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'ScenarioDetail',\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  computed: {\n    ...mapGetters(['currentScenario', 'isLoading', 'error', 'isLoggedIn'])\n  },\n  methods: {\n    formatKey(key) {\n      const keyMap = {\n        gender: '성별',\n        age: '나이',\n        medical_history: '과거력',\n        family_history: '가족력',\n        allergies: '알레르기',\n        vital_signs: '활력징후',\n        symptoms: '주요증상'\n      };\n      return keyMap[key] || key;\n    },\n    formatValue(value) {\n      if (Array.isArray(value)) {\n        return value.join(', ');\n      }\n      return value;\n    },\n    formatDate(dateString) {\n      if (!dateString) return '알 수 없음';\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    }\n  },\n  async created() {\n    // 시나리오 정보 로드\n    if (!this.currentScenario || this.currentScenario.id !== parseInt(this.id)) {\n      await this.$store.dispatch('fetchScenario', this.id);\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","props","id","type","String","Number","required","computed","methods","formatKey","key","keyMap","gender","age","medical_history","family_history","allergies","vital_signs","symptoms","formatValue","value","Array","isArray","join","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format","created","currentScenario","parseInt","$store","dispatch"],"sources":["D:\\간호시뮬레이션\\frontend\\src\\views\\ScenarioDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"scenario-detail\">\r\n    <div v-if=\"loading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">로딩 중...</span>\r\n      </div>\r\n      <p class=\"mt-3\">시나리오를 불러오는 중입니다...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"alert alert-danger my-5\">\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <div v-else-if=\"!currentScenario\" class=\"alert alert-warning my-5\">\r\n      시나리오를 찾을 수 없습니다.\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1>{{ currentScenario.title }}</h1>\r\n        <div>\r\n          <router-link :to=\"{ name: 'ScenarioList' }\" class=\"btn btn-outline-secondary me-2\">\r\n            목록으로\r\n          </router-link>\r\n          <router-link \r\n            v-if=\"isLoggedIn\" \r\n            :to=\"{ name: 'ScenarioModify', params: { id } }\" \r\n            class=\"btn btn-primary\"\r\n          >\r\n            시나리오 수정\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-header bg-primary text-white\">\r\n          <h2 class=\"h5 mb-0\">시나리오 정보</h2>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 mb-3\">\r\n              <h3 class=\"h6\">주요 질병</h3>\r\n              <p>{{ currentScenario.main_disease }}</p>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6 mb-3\">\r\n              <h3 class=\"h6\">작성자</h3>\r\n              <p>{{ currentScenario.created_by ? currentScenario.created_by.username : '알 수 없음' }}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <h3 class=\"h6\">기본 인적 사항</h3>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-bordered\">\r\n                <tbody>\r\n                  <tr v-for=\"(value, key) in currentScenario.personal_info\" :key=\"key\">\r\n                    <th style=\"width: 150px\">{{ formatKey(key) }}</th>\r\n                    <td>{{ formatValue(value) }}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          \r\n          <div v-if=\"currentScenario.additional_info\" class=\"mb-3\">\r\n            <h3 class=\"h6\">기타 사항</h3>\r\n            <p>{{ currentScenario.additional_info }}</p>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <h3 class=\"h6\">생성일</h3>\r\n            <p>{{ formatDate(currentScenario.created_at) }}</p>\r\n          </div>\r\n          \r\n          <div class=\"mb-3\">\r\n            <h3 class=\"h6\">최종 수정일</h3>\r\n            <p>{{ formatDate(currentScenario.updated_at) }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"card\">\r\n        <div class=\"card-header bg-light\">\r\n          <h2 class=\"h5 mb-0\">시나리오 내용</h2>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"scenario-content\">\r\n            <pre class=\"scenario-text\">{{ currentScenario.content }}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ScenarioDetail',\r\n  props: {\r\n    id: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['currentScenario', 'isLoading', 'error', 'isLoggedIn'])\r\n  },\r\n  methods: {\r\n    formatKey(key) {\r\n      const keyMap = {\r\n        gender: '성별',\r\n        age: '나이',\r\n        medical_history: '과거력',\r\n        family_history: '가족력',\r\n        allergies: '알레르기',\r\n        vital_signs: '활력징후',\r\n        symptoms: '주요증상'\r\n      }\r\n      \r\n      return keyMap[key] || key\r\n    },\r\n    formatValue(value) {\r\n      if (Array.isArray(value)) {\r\n        return value.join(', ')\r\n      }\r\n      return value\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return '알 수 없음'\r\n      \r\n      const date = new Date(dateString)\r\n      return new Intl.DateTimeFormat('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }).format(date)\r\n    }\r\n  },\r\n  async created() {\r\n    // 시나리오 정보 로드\r\n    if (!this.currentScenario || this.currentScenario.id !== parseInt(this.id)) {\r\n      await this.$store.dispatch('fetchScenario', this.id)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scenario-detail {\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.scenario-content {\r\n  background-color: #f8f9fa;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n}\r\n\r\n.scenario-text {\r\n  white-space: pre-wrap;\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  font-size: 1rem;\r\n  line-height: 1.6;\r\n  margin: 0;\r\n}\r\n\r\n.card {\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.table th {\r\n  background-color: #f8f9fa;\r\n}\r\n</style> "],"mappings":"AAiGA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM,CAAC;MACtBC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,UAAU,CAAC,CAAC,iBAAiB,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,CAAC;EACvE,CAAC;EACDS,OAAO,EAAE;IACPC,SAASA,CAACC,GAAG,EAAE;MACb,MAAMC,MAAK,GAAI;QACbC,MAAM,EAAE,IAAI;QACZC,GAAG,EAAE,IAAI;QACTC,eAAe,EAAE,KAAK;QACtBC,cAAc,EAAE,KAAK;QACrBC,SAAS,EAAE,MAAM;QACjBC,WAAW,EAAE,MAAM;QACnBC,QAAQ,EAAE;MACZ;MAEA,OAAOP,MAAM,CAACD,GAAG,KAAKA,GAAE;IAC1B,CAAC;IACDS,WAAWA,CAACC,KAAK,EAAE;MACjB,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;QACxB,OAAOA,KAAK,CAACG,IAAI,CAAC,IAAI;MACxB;MACA,OAAOH,KAAI;IACb,CAAC;IACDI,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,QAAO;MAE/B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAO,IAAIG,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE,SAAS;QACdC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC,CAACC,MAAM,CAACT,IAAI;IAChB;EACF,CAAC;EACD,MAAMU,OAAOA,CAAA,EAAG;IACd;IACA,IAAI,CAAC,IAAI,CAACC,eAAc,IAAK,IAAI,CAACA,eAAe,CAACnC,EAAC,KAAMoC,QAAQ,CAAC,IAAI,CAACpC,EAAE,CAAC,EAAE;MAC1E,MAAM,IAAI,CAACqC,MAAM,CAACC,QAAQ,CAAC,eAAe,EAAE,IAAI,CAACtC,EAAE;IACrD;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}