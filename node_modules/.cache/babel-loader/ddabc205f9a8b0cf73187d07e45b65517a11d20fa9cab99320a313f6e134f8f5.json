{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"scenario-list\"\n};\nconst _hoisted_2 = {\n  class: \"d-flex justify-content-between align-items-center mb-4\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"text-center my-5\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"alert alert-danger my-5\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"alert alert-info my-5\"\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 3\n};\nconst _hoisted_8 = {\n  class: \"mb-4\"\n};\nconst _hoisted_9 = {\n  class: \"input-group\"\n};\nconst _hoisted_10 = {\n  class: \"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\"\n};\nconst _hoisted_11 = {\n  class: \"card h-100\"\n};\nconst _hoisted_12 = {\n  class: \"card-header bg-primary text-white\"\n};\nconst _hoisted_13 = [\"title\"];\nconst _hoisted_14 = {\n  class: \"card-body\"\n};\nconst _hoisted_15 = {\n  class: \"card-text mb-2\"\n};\nconst _hoisted_16 = {\n  class: \"card-text mb-2\"\n};\nconst _hoisted_17 = {\n  class: \"card-text mb-0\"\n};\nconst _hoisted_18 = {\n  class: \"card-footer bg-white border-top-0\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", null, \"시나리오 목록\", -1)), _ctx.isAdmin ? (_openBlock(), _createBlock(_component_router_link, {\n    key: 0,\n    to: {\n      name: 'ScenarioCreate'\n    },\n    class: \"btn btn-primary\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 새 시나리오 생성 \")])),\n    _: 1\n  })) : _createCommentVNode(\"\", true)]), _ctx.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[4] || (_cache[4] = [_createElementVNode(\"div\", {\n    class: \"spinner-border text-primary\",\n    role: \"status\"\n  }, [_createElementVNode(\"span\", {\n    class: \"visually-hidden\"\n  }, \"로딩 중...\")], -1), _createElementVNode(\"p\", {\n    class: \"mt-3\"\n  }, \"시나리오를 불러오는 중입니다...\", -1)]))) : _ctx.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString(_ctx.error), 1)) : _ctx.scenarios.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[7] || (_cache[7] = _createTextVNode(\" 등록된 시나리오가 없습니다. \")), _ctx.isAdmin ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, [_createVNode(_component_router_link, {\n    to: {\n      name: 'ScenarioCreate'\n    },\n    class: \"alert-link\"\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\" 새 시나리오를 생성 \")])),\n    _: 1\n  }), _cache[6] || (_cache[6] = _createTextVNode(\"해 보세요. \"))])) : _createCommentVNode(\"\", true)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    placeholder: \"시나리오명, 질병명으로 검색\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchQuery = $event)\n  }, null, 512), [[_vModelText, $data.searchQuery]]), _createElementVNode(\"button\", {\n    class: \"btn btn-outline-secondary\",\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.search && $options.search(...args))\n  }, \" 검색 \")])]), _createElementVNode(\"div\", _hoisted_10, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filteredScenarios, scenario => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"col\",\n      key: scenario.id\n    }, [_createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"h2\", {\n      class: \"h5 mb-0 text-truncate\",\n      title: scenario.title\n    }, _toDisplayString(scenario.title), 9, _hoisted_13)]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"p\", _hoisted_15, [_cache[8] || (_cache[8] = _createElementVNode(\"strong\", null, \"주요 질병:\", -1)), _createTextVNode(\" \" + _toDisplayString(scenario.main_disease), 1)]), _createElementVNode(\"p\", _hoisted_16, [_cache[9] || (_cache[9] = _createElementVNode(\"strong\", null, \"작성자:\", -1)), _createTextVNode(\" \" + _toDisplayString(scenario.created_by ? scenario.created_by.username : '알 수 없음'), 1)]), _createElementVNode(\"p\", _hoisted_17, [_cache[10] || (_cache[10] = _createElementVNode(\"strong\", null, \"생성일:\", -1)), _createTextVNode(\" \" + _toDisplayString($options.formatDate(scenario.created_at)), 1)])]), _createElementVNode(\"div\", _hoisted_18, [_createVNode(_component_router_link, {\n      to: {\n        name: 'ScenarioDetail',\n        params: {\n          id: scenario.id\n        }\n      },\n      class: \"btn btn-outline-primary w-100\"\n    }, {\n      default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\" 상세 보기 \")])),\n      _: 2\n    }, 1032, [\"to\"])])])]);\n  }), 128))])]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_ctx","isAdmin","_createBlock","_component_router_link","to","name","default","_withCtx","_cache","_createTextVNode","_","_createCommentVNode","loading","_hoisted_3","role","error","_hoisted_4","_toDisplayString","scenarios","length","_hoisted_5","_hoisted_6","_createVNode","_hoisted_7","_hoisted_8","_hoisted_9","type","placeholder","$event","$data","searchQuery","onClick","args","$options","search","_hoisted_10","_Fragment","_renderList","filteredScenarios","scenario","id","_hoisted_11","_hoisted_12","title","_hoisted_13","_hoisted_14","_hoisted_15","main_disease","_hoisted_16","created_by","username","_hoisted_17","formatDate","created_at","_hoisted_18","params"],"sources":["D:\\간호시뮬레이션\\frontend\\src\\views\\ScenarioList.vue"],"sourcesContent":["<template>\r\n  <div class=\"scenario-list\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <h1>시나리오 목록</h1>\r\n      <router-link v-if=\"isAdmin\" :to=\"{ name: 'ScenarioCreate' }\" class=\"btn btn-primary\">\r\n        새 시나리오 생성\r\n      </router-link>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">로딩 중...</span>\r\n      </div>\r\n      <p class=\"mt-3\">시나리오를 불러오는 중입니다...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"alert alert-danger my-5\">\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <div v-else-if=\"scenarios.length === 0\" class=\"alert alert-info my-5\">\r\n      등록된 시나리오가 없습니다.\r\n      <span v-if=\"isAdmin\">\r\n        <router-link :to=\"{ name: 'ScenarioCreate' }\" class=\"alert-link\">\r\n          새 시나리오를 생성\r\n        </router-link>해 보세요.\r\n      </span>\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <div class=\"mb-4\">\r\n        <div class=\"input-group\">\r\n          <input \r\n            type=\"text\" \r\n            class=\"form-control\" \r\n            placeholder=\"시나리오명, 질병명으로 검색\" \r\n            v-model=\"searchQuery\"\r\n          >\r\n          <button class=\"btn btn-outline-secondary\" type=\"button\" @click=\"search\">\r\n            검색\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\r\n        <div class=\"col\" v-for=\"scenario in filteredScenarios\" :key=\"scenario.id\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-header bg-primary text-white\">\r\n              <h2 class=\"h5 mb-0 text-truncate\" :title=\"scenario.title\">{{ scenario.title }}</h2>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text mb-2\"><strong>주요 질병:</strong> {{ scenario.main_disease }}</p>\r\n              <p class=\"card-text mb-2\">\r\n                <strong>작성자:</strong> {{ scenario.created_by ? scenario.created_by.username : '알 수 없음' }}\r\n              </p>\r\n              <p class=\"card-text mb-0\">\r\n                <strong>생성일:</strong> {{ formatDate(scenario.created_at) }}\r\n              </p>\r\n            </div>\r\n            <div class=\"card-footer bg-white border-top-0\">\r\n              <router-link \r\n                :to=\"{ name: 'ScenarioDetail', params: { id: scenario.id } }\" \r\n                class=\"btn btn-outline-primary w-100\"\r\n              >\r\n                상세 보기\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ScenarioList',\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      filteredScenarios: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['scenarios', 'isLoading', 'error', 'isAdmin'])\r\n  },\r\n  methods: {\r\n    formatDate(dateString) {\r\n      if (!dateString) return '알 수 없음'\r\n      \r\n      const date = new Date(dateString)\r\n      return new Intl.DateTimeFormat('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      }).format(date)\r\n    },\r\n    search() {\r\n      if (!this.searchQuery.trim()) {\r\n        this.filteredScenarios = [...this.scenarios]\r\n        return\r\n      }\r\n      \r\n      const query = this.searchQuery.toLowerCase()\r\n      this.filteredScenarios = this.scenarios.filter(scenario => {\r\n        return (\r\n          scenario.title.toLowerCase().includes(query) ||\r\n          scenario.main_disease.toLowerCase().includes(query)\r\n        )\r\n      })\r\n    }\r\n  },\r\n  async created() {\r\n    // 시나리오 목록 로드\r\n    await this.$store.dispatch('fetchScenarios')\r\n    this.filteredScenarios = [...this.scenarios]\r\n  },\r\n  watch: {\r\n    scenarios(newScenarios) {\r\n      this.filteredScenarios = [...newScenarios]\r\n      this.search()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scenario-list {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card {\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-header {\r\n  padding: 1rem;\r\n}\r\n\r\n.card-body {\r\n  padding: 1.25rem;\r\n}\r\n\r\n.card-footer {\r\n  padding: 1rem;\r\n}\r\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAwD;;EAFvEC,GAAA;EASwBD,KAAK,EAAC;;;EAT9BC,GAAA;EAgB2BD,KAAK,EAAC;;;EAhBjCC,GAAA;EAoB4CD,KAAK,EAAC;;;EApBlDC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EA8BWD,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAa;;EAarBA,KAAK,EAAC;AAAgD;;EAElDA,KAAK,EAAC;AAAY;;EAChBA,KAAK,EAAC;AAAmC;oBA/C1D;;EAkDiBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAgB;;EACtBA,KAAK,EAAC;AAAgB;;EAGtBA,KAAK,EAAC;AAAgB;;EAItBA,KAAK,EAAC;AAAmC;;;uBA1DxDE,mBAAA,CAsEM,OAtENC,UAsEM,GArEJC,mBAAA,CAKM,OALNC,UAKM,G,0BAJJD,mBAAA,CAAgB,YAAZ,SAAO,QACQE,IAAA,CAAAC,OAAO,I,cAA1BC,YAAA,CAEcC,sBAAA;IANpBR,GAAA;IAImCS,EAAE,EAAE;MAAAC,IAAA;IAAA,CAA0B;IAAEX,KAAK,EAAC;;IAJzEY,OAAA,EAAAC,QAAA,CAI2F,MAErFC,MAAA,QAAAA,MAAA,OANNC,gBAAA,CAI2F,aAErF,E;IANNC,CAAA;QAAAC,mBAAA,W,GASeX,IAAA,CAAAY,OAAO,I,cAAlBhB,mBAAA,CAKM,OALNiB,UAKM,EAAAL,MAAA,QAAAA,MAAA,OAJJV,mBAAA,CAEM;IAFDJ,KAAK,EAAC,6BAA6B;IAACoB,IAAI,EAAC;MAC5ChB,mBAAA,CAA4C;IAAtCJ,KAAK,EAAC;EAAiB,GAAC,SAAO,E,OAEvCI,mBAAA,CAAsC;IAAnCJ,KAAK,EAAC;EAAM,GAAC,oBAAkB,M,MAGpBM,IAAA,CAAAe,KAAK,I,cAArBnB,mBAAA,CAEM,OAFNoB,UAEM,EAAAC,gBAAA,CADDjB,IAAA,CAAAe,KAAK,SAGMf,IAAA,CAAAkB,SAAS,CAACC,MAAM,U,cAAhCvB,mBAAA,CAOM,OAPNwB,UAOM,G,0BA3BVX,gBAAA,CAoB0E,mBAEpE,IAAYT,IAAA,CAAAC,OAAO,I,cAAnBL,mBAAA,CAIO,QA1BbyB,UAAA,GAuBQC,YAAA,CAEcnB,sBAAA;IAFAC,EAAE,EAAE;MAAAC,IAAA;IAAA,CAA0B;IAAEX,KAAK,EAAC;;IAvB5DY,OAAA,EAAAC,QAAA,CAuByE,MAEjEC,MAAA,QAAAA,MAAA,OAzBRC,gBAAA,CAuByE,cAEjE,E;IAzBRC,CAAA;gCAAAD,gBAAA,CAyBsB,SAChB,G,KA1BNE,mBAAA,W,oBA6BIf,mBAAA,CAyCM,OAtEV2B,UAAA,GA8BMzB,mBAAA,CAYM,OAZN0B,UAYM,GAXJ1B,mBAAA,CAUM,OAVN2B,UAUM,G,gBATJ3B,mBAAA,CAKC;IAJC4B,IAAI,EAAC,MAAM;IACXhC,KAAK,EAAC,cAAc;IACpBiC,WAAW,EAAC,iBAAiB;IAnCzC,uBAAAnB,MAAA,QAAAA,MAAA,MAAAoB,MAAA,IAoCqBC,KAAA,CAAAC,WAAW,GAAAF,MAAA;gCAAXC,KAAA,CAAAC,WAAW,E,GAEtBhC,mBAAA,CAES;IAFDJ,KAAK,EAAC,2BAA2B;IAACgC,IAAI,EAAC,QAAQ;IAAEK,OAAK,EAAAvB,MAAA,QAAAA,MAAA,UAAAwB,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,MAExE,E,KAIJlC,mBAAA,CAyBM,OAzBNqC,WAyBM,I,kBAxBJvC,mBAAA,CAuBMwC,SAAA,QApEdC,WAAA,CA6C4CR,KAAA,CAAAS,iBAAiB,EAA7BC,QAAQ;yBAAhC3C,mBAAA,CAuBM;MAvBDF,KAAK,EAAC,KAAK;MAAwCC,GAAG,EAAE4C,QAAQ,CAACC;QACpE1C,mBAAA,CAqBM,OArBN2C,WAqBM,GApBJ3C,mBAAA,CAEM,OAFN4C,WAEM,GADJ5C,mBAAA,CAAmF;MAA/EJ,KAAK,EAAC,uBAAuB;MAAEiD,KAAK,EAAEJ,QAAQ,CAACI;wBAAUJ,QAAQ,CAACI,KAAK,MAhDzFC,WAAA,E,GAkDY9C,mBAAA,CAQM,OARN+C,WAQM,GAPJ/C,mBAAA,CAAiF,KAAjFgD,WAAiF,G,0BAAvDhD,mBAAA,CAAuB,gBAAf,QAAM,QAnDtDW,gBAAA,CAmD+D,GAAC,GAAAQ,gBAAA,CAAGsB,QAAQ,CAACQ,YAAY,M,GAC1EjD,mBAAA,CAEI,KAFJkD,WAEI,G,0BADFlD,mBAAA,CAAqB,gBAAb,MAAI,QArD5BW,gBAAA,CAqDqC,GAAC,GAAAQ,gBAAA,CAAGsB,QAAQ,CAACU,UAAU,GAAGV,QAAQ,CAACU,UAAU,CAACC,QAAQ,iB,GAE7EpD,mBAAA,CAEI,KAFJqD,WAEI,G,4BADFrD,mBAAA,CAAqB,gBAAb,MAAI,QAxD5BW,gBAAA,CAwDqC,GAAC,GAAAQ,gBAAA,CAAGgB,QAAA,CAAAmB,UAAU,CAACb,QAAQ,CAACc,UAAU,O,KAG3DvD,mBAAA,CAOM,OAPNwD,WAOM,GANJhC,YAAA,CAKcnB,sBAAA;MAJXC,EAAE;QAAAC,IAAA;QAAAkD,MAAA;UAAAf,EAAA,EAA0CD,QAAQ,CAACC;QAAE;MAAA;MACxD9C,KAAK,EAAC;;MA9DtBY,OAAA,EAAAC,QAAA,CA+De,MAEDC,MAAA,SAAAA,MAAA,QAjEdC,gBAAA,CA+De,SAED,E;MAjEdC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}