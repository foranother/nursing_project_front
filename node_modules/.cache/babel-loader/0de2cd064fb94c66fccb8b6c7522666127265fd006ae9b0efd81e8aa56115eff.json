{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'ScenarioList',\n  data() {\n    return {\n      searchQuery: '',\n      filteredScenarios: []\n    };\n  },\n  computed: {\n    ...mapGetters(['scenarios', 'isLoading', 'error', 'isAdmin'])\n  },\n  methods: {\n    formatDate(dateString) {\n      if (!dateString) return '알 수 없음';\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      }).format(date);\n    },\n    search() {\n      if (!this.searchQuery.trim()) {\n        this.filteredScenarios = [...this.scenarios];\n        return;\n      }\n      const query = this.searchQuery.toLowerCase();\n      this.filteredScenarios = this.scenarios.filter(scenario => {\n        return scenario.title.toLowerCase().includes(query) || scenario.main_disease.toLowerCase().includes(query);\n      });\n    }\n  },\n  async created() {\n    // 시나리오 목록 로드\n    await this.$store.dispatch('fetchScenarios');\n    this.filteredScenarios = [...this.scenarios];\n  },\n  watch: {\n    scenarios(newScenarios) {\n      this.filteredScenarios = [...newScenarios];\n      this.search();\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","searchQuery","filteredScenarios","computed","methods","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","format","search","trim","scenarios","query","toLowerCase","filter","scenario","title","includes","main_disease","created","$store","dispatch","watch","newScenarios"],"sources":["D:\\간호시뮬레이션\\frontend\\src\\views\\ScenarioList.vue"],"sourcesContent":["<template>\r\n  <div class=\"scenario-list\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <h1>시나리오 목록</h1>\r\n      <router-link v-if=\"isAdmin\" :to=\"{ name: 'ScenarioCreate' }\" class=\"btn btn-primary\">\r\n        새 시나리오 생성\r\n      </router-link>\r\n    </div>\r\n    \r\n    <div v-if=\"loading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">로딩 중...</span>\r\n      </div>\r\n      <p class=\"mt-3\">시나리오를 불러오는 중입니다...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"alert alert-danger my-5\">\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <div v-else-if=\"scenarios.length === 0\" class=\"alert alert-info my-5\">\r\n      등록된 시나리오가 없습니다.\r\n      <span v-if=\"isAdmin\">\r\n        <router-link :to=\"{ name: 'ScenarioCreate' }\" class=\"alert-link\">\r\n          새 시나리오를 생성\r\n        </router-link>해 보세요.\r\n      </span>\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <div class=\"mb-4\">\r\n        <div class=\"input-group\">\r\n          <input \r\n            type=\"text\" \r\n            class=\"form-control\" \r\n            placeholder=\"시나리오명, 질병명으로 검색\" \r\n            v-model=\"searchQuery\"\r\n          >\r\n          <button class=\"btn btn-outline-secondary\" type=\"button\" @click=\"search\">\r\n            검색\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4\">\r\n        <div class=\"col\" v-for=\"scenario in filteredScenarios\" :key=\"scenario.id\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-header bg-primary text-white\">\r\n              <h2 class=\"h5 mb-0 text-truncate\" :title=\"scenario.title\">{{ scenario.title }}</h2>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text mb-2\"><strong>주요 질병:</strong> {{ scenario.main_disease }}</p>\r\n              <p class=\"card-text mb-2\">\r\n                <strong>작성자:</strong> {{ scenario.created_by ? scenario.created_by.username : '알 수 없음' }}\r\n              </p>\r\n              <p class=\"card-text mb-0\">\r\n                <strong>생성일:</strong> {{ formatDate(scenario.created_at) }}\r\n              </p>\r\n            </div>\r\n            <div class=\"card-footer bg-white border-top-0\">\r\n              <router-link \r\n                :to=\"{ name: 'ScenarioDetail', params: { id: scenario.id } }\" \r\n                class=\"btn btn-outline-primary w-100\"\r\n              >\r\n                상세 보기\r\n              </router-link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ScenarioList',\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      filteredScenarios: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['scenarios', 'isLoading', 'error', 'isAdmin'])\r\n  },\r\n  methods: {\r\n    formatDate(dateString) {\r\n      if (!dateString) return '알 수 없음'\r\n      \r\n      const date = new Date(dateString)\r\n      return new Intl.DateTimeFormat('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      }).format(date)\r\n    },\r\n    search() {\r\n      if (!this.searchQuery.trim()) {\r\n        this.filteredScenarios = [...this.scenarios]\r\n        return\r\n      }\r\n      \r\n      const query = this.searchQuery.toLowerCase()\r\n      this.filteredScenarios = this.scenarios.filter(scenario => {\r\n        return (\r\n          scenario.title.toLowerCase().includes(query) ||\r\n          scenario.main_disease.toLowerCase().includes(query)\r\n        )\r\n      })\r\n    }\r\n  },\r\n  async created() {\r\n    // 시나리오 목록 로드\r\n    await this.$store.dispatch('fetchScenarios')\r\n    this.filteredScenarios = [...this.scenarios]\r\n  },\r\n  watch: {\r\n    scenarios(newScenarios) {\r\n      this.filteredScenarios = [...newScenarios]\r\n      this.search()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scenario-list {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card {\r\n  transition: transform 0.3s, box-shadow 0.3s;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-header {\r\n  padding: 1rem;\r\n}\r\n\r\n.card-body {\r\n  padding: 1.25rem;\r\n}\r\n\r\n.card-footer {\r\n  padding: 1rem;\r\n}\r\n</style> "],"mappings":"AA2EA,SAASA,UAAS,QAAS,MAAK;AAEhC,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,iBAAiB,EAAE;IACrB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGL,UAAU,CAAC,CAAC,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,CAAC;EAC9D,CAAC;EACDM,OAAO,EAAE;IACPC,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,QAAO;MAE/B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU;MAChC,OAAO,IAAIG,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE;MACP,CAAC,CAAC,CAACC,MAAM,CAACP,IAAI;IAChB,CAAC;IACDQ,MAAMA,CAAA,EAAG;MACP,IAAI,CAAC,IAAI,CAACd,WAAW,CAACe,IAAI,CAAC,CAAC,EAAE;QAC5B,IAAI,CAACd,iBAAgB,GAAI,CAAC,GAAG,IAAI,CAACe,SAAS;QAC3C;MACF;MAEA,MAAMC,KAAI,GAAI,IAAI,CAACjB,WAAW,CAACkB,WAAW,CAAC;MAC3C,IAAI,CAACjB,iBAAgB,GAAI,IAAI,CAACe,SAAS,CAACG,MAAM,CAACC,QAAO,IAAK;QACzD,OACEA,QAAQ,CAACC,KAAK,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,KAAK,KAC3CG,QAAQ,CAACG,YAAY,CAACL,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,KAAK;MAEtD,CAAC;IACH;EACF,CAAC;EACD,MAAMO,OAAOA,CAAA,EAAG;IACd;IACA,MAAM,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,gBAAgB;IAC3C,IAAI,CAACzB,iBAAgB,GAAI,CAAC,GAAG,IAAI,CAACe,SAAS;EAC7C,CAAC;EACDW,KAAK,EAAE;IACLX,SAASA,CAACY,YAAY,EAAE;MACtB,IAAI,CAAC3B,iBAAgB,GAAI,CAAC,GAAG2B,YAAY;MACzC,IAAI,CAACd,MAAM,CAAC;IACd;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}