{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport html2pdf from 'html2pdf.js';\nimport { marked } from 'marked';\nimport { getCurrentInstance } from 'vue';\nexport default {\n  name: 'ScenarioDetail',\n  props: {\n    id: {\n      type: [String, Number],\n      required: true\n    }\n  },\n  data() {\n    return {\n      showDeleteModal: false,\n      deleting: false\n    };\n  },\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    return {\n      proxy\n    };\n  },\n  computed: {\n    ...mapGetters(['currentScenario', 'isLoading', 'error', 'isLoggedIn']),\n    loading() {\n      return this.isLoading;\n    },\n    hasPatientConversation() {\n      return this.currentScenario && this.currentScenario.patient_conversation && this.currentScenario.patient_conversation.trim() !== '';\n    },\n    formattedContent() {\n      if (!this.currentScenario || !this.currentScenario.content) return '';\n      return marked(this.currentScenario.content);\n    },\n    formattedConversation() {\n      if (!this.hasPatientConversation) return '';\n      return marked(this.currentScenario.patient_conversation);\n    }\n  },\n  methods: {\n    formatKey(key) {\n      const keyMap = {\n        gender: '성별',\n        age: '나이',\n        medical_history: '과거력',\n        family_history: '가족력',\n        allergies: '알레르기',\n        vital_signs: '활력징후',\n        symptoms: '주요증상'\n      };\n      return keyMap[key] || key;\n    },\n    formatValue(value) {\n      if (Array.isArray(value)) {\n        return value.join(', ');\n      }\n\n      // 나이 값의 '세세' 문제 해결\n      if (typeof value === 'string' && value.endsWith('세')) {\n        // 이미 '세'로 끝나는 경우 그대로 반환\n        return value;\n      }\n      return value;\n    },\n    formatDate(dateString) {\n      if (!dateString) return '알 수 없음';\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      }).format(date);\n    },\n    downloadPDF() {\n      // 로딩 메시지 설정\n      this.proxy.$mitt.emit('set-loading', [true, 'PDF 파일을 생성하는 중입니다. 잠시만 기다려주세요...']);\n\n      // 현재 페이지의 내용을 복제하여 PDF 생성용 요소 생성\n      const element = document.createElement('div');\n      element.innerHTML = `\n        <div style=\"padding: 20px; font-family: 'Noto Sans KR', sans-serif;\">\n          <h1 style=\"text-align: center; margin-bottom: 20px;\">${this.currentScenario.title}</h1>\n          \n          <div style=\"margin-bottom: 20px;\">\n            <h2>시나리오 정보</h2>\n            <p><strong>주요 질병:</strong> ${this.currentScenario.main_disease}</p>\n            <p><strong>작성자:</strong> ${this.currentScenario.created_by ? this.currentScenario.created_by.username : '알 수 없음'}</p>\n            <p><strong>생성일:</strong> ${this.formatDate(this.currentScenario.created_at)}</p>\n            <p><strong>수정일:</strong> ${this.formatDate(this.currentScenario.updated_at)}</p>\n          </div>\n          \n          <div style=\"margin-bottom: 20px;\">\n            <h2>환자 정보</h2>\n            ${Object.entries(this.currentScenario.personal_info || {}).map(([key, value]) => `<p><strong>${this.formatKey(key)}:</strong> ${this.formatValue(value)}</p>`).join('')}\n          </div>\n          \n          ${this.currentScenario.additional_info ? `\n            <div style=\"margin-bottom: 20px;\">\n              <h2>기타 사항</h2>\n              <p>${this.currentScenario.additional_info}</p>\n            </div>\n          ` : ''}\n          \n          <div style=\"margin-bottom: 20px;\">\n            <h2>시나리오 내용</h2>\n            <div>${this.formattedContent}</div>\n          </div>\n          \n          ${this.hasPatientConversation ? `\n            <div>\n              <h2>환자와의 대화</h2>\n              <div>${this.formattedConversation}</div>\n            </div>\n          ` : ''}\n        </div>\n      `;\n\n      // PDF 옵션 설정\n      const options = {\n        margin: 10,\n        filename: `${this.currentScenario.title}_시나리오.pdf`,\n        image: {\n          type: 'jpeg',\n          quality: 0.98\n        },\n        html2canvas: {\n          scale: 2\n        },\n        jsPDF: {\n          unit: 'mm',\n          format: 'a4',\n          orientation: 'portrait'\n        }\n      };\n\n      // PDF 생성 및 다운로드\n      html2pdf().from(element).set(options).save().then(() => {\n        // 로딩 메시지 해제\n        this.proxy.$mitt.emit('set-loading', [false, '']);\n      }).catch(error => {\n        console.error('PDF 생성 오류:', error);\n        // 로딩 메시지 해제\n        this.proxy.$mitt.emit('set-loading', [false, '']);\n      });\n    },\n    async deleteScenario() {\n      try {\n        this.deleting = true;\n        // 로딩 메시지 설정\n        this.proxy.$mitt.emit('set-loading', [true, '시나리오를 삭제하는 중입니다...']);\n        await this.$store.dispatch('deleteScenario', this.id);\n\n        // 로딩 메시지 해제\n        this.proxy.$mitt.emit('set-loading', [false, '']);\n        this.showDeleteModal = false;\n\n        // 삭제 성공 후 목록 페이지로 이동\n        this.$router.push({\n          name: 'ScenarioList'\n        });\n      } catch (error) {\n        console.error('시나리오 삭제 실패:', error);\n        // 로딩 메시지 해제\n        this.proxy.$mitt.emit('set-loading', [false, '']);\n        this.deleting = false;\n        alert('시나리오 삭제 중 오류가 발생했습니다: ' + error.message);\n      }\n    }\n  },\n  async created() {\n    // 시나리오 정보 로드\n    if (!this.currentScenario || this.currentScenario.id !== parseInt(this.id)) {\n      try {\n        // 로딩 메시지 설정\n        this.proxy.$mitt.emit('set-loading', [true, '시나리오를 불러오는 중입니다...']);\n        await this.$store.dispatch('fetchScenario', this.id);\n        console.log('로드된 시나리오:', this.currentScenario);\n\n        // 환자와의 대화 확인\n        if (this.currentScenario && !this.currentScenario.patient_conversation) {\n          console.warn('환자와의 대화가 없습니다.');\n        }\n\n        // 로딩 메시지 해제\n        this.proxy.$mitt.emit('set-loading', [false, '']);\n      } catch (error) {\n        console.error('시나리오 로드 실패:', error);\n        // 로딩 메시지 해제\n        this.proxy.$mitt.emit('set-loading', [false, '']);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","html2pdf","marked","getCurrentInstance","name","props","id","type","String","Number","required","data","showDeleteModal","deleting","setup","proxy","computed","loading","isLoading","hasPatientConversation","currentScenario","patient_conversation","trim","formattedContent","content","formattedConversation","methods","formatKey","key","keyMap","gender","age","medical_history","family_history","allergies","vital_signs","symptoms","formatValue","value","Array","isArray","join","endsWith","formatDate","dateString","date","Date","Intl","DateTimeFormat","year","month","day","hour","minute","format","downloadPDF","$mitt","emit","element","document","createElement","innerHTML","title","main_disease","created_by","username","created_at","updated_at","Object","entries","personal_info","map","additional_info","options","margin","filename","image","quality","html2canvas","scale","jsPDF","unit","orientation","from","set","save","then","catch","error","console","deleteScenario","$store","dispatch","$router","push","alert","message","created","parseInt","log","warn"],"sources":["D:\\간호시뮬레이션\\frontend\\src\\views\\ScenarioDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"scenario-detail\">\r\n    <div v-if=\"loading\" class=\"text-center my-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">로딩 중...</span>\r\n      </div>\r\n      <p class=\"mt-3\">시나리오를 불러오는 중입니다...</p>\r\n    </div>\r\n    \r\n    <div v-else-if=\"error\" class=\"alert alert-danger my-5\">\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <div v-else-if=\"!currentScenario\" class=\"alert alert-warning my-5\">\r\n      시나리오를 찾을 수 없습니다.\r\n    </div>\r\n    \r\n    <div v-else>\r\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n        <h1>{{ currentScenario.title }}</h1>\r\n        <div>\r\n          <button class=\"btn btn-success me-2\" @click=\"downloadPDF\">\r\n            <i class=\"bi bi-file-earmark-pdf\"></i> PDF 다운로드\r\n          </button>\r\n          <router-link :to=\"{ name: 'ScenarioList' }\" class=\"btn btn-outline-secondary me-2\">\r\n            목록으로\r\n          </router-link>\r\n          <router-link \r\n            v-if=\"isLoggedIn\" \r\n            :to=\"{ name: 'ScenarioModify', params: { id } }\" \r\n            class=\"btn btn-primary me-2\"\r\n          >\r\n            시나리오 수정\r\n          </router-link>\r\n          <button \r\n            v-if=\"isLoggedIn\" \r\n            class=\"btn btn-danger\"\r\n            @click=\"showDeleteModal = true\"\r\n          >\r\n            시나리오 삭제\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"card mb-4\">\r\n        <div class=\"card-header bg-primary text-white\">\r\n          <h2 class=\"h5 mb-0\">시나리오 정보</h2>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 mb-3\">\r\n              <h3 class=\"h6\">주요 질병</h3>\r\n              <p>{{ currentScenario.main_disease }}</p>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6 mb-3\">\r\n              <h3 class=\"h6\">작성자</h3>\r\n              <p>{{ currentScenario.created_by ? currentScenario.created_by.username : '알 수 없음' }}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"row\">\r\n            <div class=\"col-md-6 mb-3\">\r\n              <h3 class=\"h6\">생성일</h3>\r\n              <p>{{ formatDate(currentScenario.created_at) }}</p>\r\n            </div>\r\n            \r\n            <div class=\"col-md-6 mb-3\">\r\n              <h3 class=\"h6\">수정일</h3>\r\n              <p>{{ formatDate(currentScenario.updated_at) }}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div v-if=\"currentScenario.personal_info\" class=\"mt-3\">\r\n            <h3 class=\"h6\">환자 정보</h3>\r\n            <div class=\"row\">\r\n              <div v-for=\"(value, key) in currentScenario.personal_info\" :key=\"key\" class=\"col-md-4 mb-2\">\r\n                <strong>{{ formatKey(key) }}:</strong> {{ formatValue(value) }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div v-if=\"currentScenario.additional_info\" class=\"mt-3\">\r\n            <h3 class=\"h6\">기타 사항</h3>\r\n            <p>{{ currentScenario.additional_info }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"row mb-4\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-header bg-primary text-white\">\r\n              <h2 class=\"h5 mb-0\">시나리오 내용</h2>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"scenario-content\" id=\"scenario-content\">\r\n                <div class=\"scenario-text\" v-html=\"formattedContent\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"col-md-6\">\r\n          <div class=\"card h-100\">\r\n            <div class=\"card-header bg-primary text-white\">\r\n              <h2 class=\"h5 mb-0\">환자와의 대화</h2>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div v-if=\"hasPatientConversation\" class=\"scenario-conversation\" id=\"scenario-conversation\">\r\n                <div class=\"conversation-text\" v-html=\"formattedConversation\"></div>\r\n              </div>\r\n              <div v-else class=\"alert alert-warning\">\r\n                환자와의 대화 내용이 없습니다.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 삭제 확인 모달 -->\r\n    <div v-if=\"showDeleteModal\" class=\"modal-wrapper\">\r\n      <div class=\"modal fade show modal-custom\" tabindex=\"-1\" style=\"display: block; z-index: 1051;\">\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header bg-danger text-white\">\r\n              <h5 class=\"modal-title\">시나리오 삭제 확인</h5>\r\n              <button type=\"button\" class=\"btn-close\" @click=\"showDeleteModal = false\"></button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <p>'{{ currentScenario?.title }}' 시나리오를 정말 삭제하시겠습니까?</p>\r\n              <p class=\"text-danger\">이 작업은 되돌릴 수 없습니다.</p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" @click=\"showDeleteModal = false\">취소</button>\r\n              <button type=\"button\" class=\"btn btn-danger\" @click=\"deleteScenario\" :disabled=\"deleting\">\r\n                <span v-if=\"deleting\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                삭제\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-backdrop-custom fade show\"></div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport html2pdf from 'html2pdf.js'\r\nimport { marked } from 'marked'\r\nimport { getCurrentInstance } from 'vue'\r\n\r\nexport default {\r\n  name: 'ScenarioDetail',\r\n  props: {\r\n    id: {\r\n      type: [String, Number],\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      showDeleteModal: false,\r\n      deleting: false\r\n    }\r\n  },\r\n  setup() {\r\n    const { proxy } = getCurrentInstance()\r\n    return { proxy }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['currentScenario', 'isLoading', 'error', 'isLoggedIn']),\r\n    loading() {\r\n      return this.isLoading\r\n    },\r\n    hasPatientConversation() {\r\n      return this.currentScenario && \r\n             this.currentScenario.patient_conversation && \r\n             this.currentScenario.patient_conversation.trim() !== ''\r\n    },\r\n    formattedContent() {\r\n      if (!this.currentScenario || !this.currentScenario.content) return ''\r\n      return marked(this.currentScenario.content)\r\n    },\r\n    formattedConversation() {\r\n      if (!this.hasPatientConversation) return ''\r\n      return marked(this.currentScenario.patient_conversation)\r\n    }\r\n  },\r\n  methods: {\r\n    formatKey(key) {\r\n      const keyMap = {\r\n        gender: '성별',\r\n        age: '나이',\r\n        medical_history: '과거력',\r\n        family_history: '가족력',\r\n        allergies: '알레르기',\r\n        vital_signs: '활력징후',\r\n        symptoms: '주요증상'\r\n      }\r\n      \r\n      return keyMap[key] || key\r\n    },\r\n    formatValue(value) {\r\n      if (Array.isArray(value)) {\r\n        return value.join(', ')\r\n      }\r\n      \r\n      // 나이 값의 '세세' 문제 해결\r\n      if (typeof value === 'string' && value.endsWith('세')) {\r\n        // 이미 '세'로 끝나는 경우 그대로 반환\r\n        return value;\r\n      }\r\n      \r\n      return value\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return '알 수 없음'\r\n      \r\n      const date = new Date(dateString)\r\n      return new Intl.DateTimeFormat('ko-KR', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit'\r\n      }).format(date)\r\n    },\r\n    downloadPDF() {\r\n      // 로딩 메시지 설정\r\n      this.proxy.$mitt.emit('set-loading', [true, 'PDF 파일을 생성하는 중입니다. 잠시만 기다려주세요...']);\r\n      \r\n      // 현재 페이지의 내용을 복제하여 PDF 생성용 요소 생성\r\n      const element = document.createElement('div');\r\n      element.innerHTML = `\r\n        <div style=\"padding: 20px; font-family: 'Noto Sans KR', sans-serif;\">\r\n          <h1 style=\"text-align: center; margin-bottom: 20px;\">${this.currentScenario.title}</h1>\r\n          \r\n          <div style=\"margin-bottom: 20px;\">\r\n            <h2>시나리오 정보</h2>\r\n            <p><strong>주요 질병:</strong> ${this.currentScenario.main_disease}</p>\r\n            <p><strong>작성자:</strong> ${this.currentScenario.created_by ? this.currentScenario.created_by.username : '알 수 없음'}</p>\r\n            <p><strong>생성일:</strong> ${this.formatDate(this.currentScenario.created_at)}</p>\r\n            <p><strong>수정일:</strong> ${this.formatDate(this.currentScenario.updated_at)}</p>\r\n          </div>\r\n          \r\n          <div style=\"margin-bottom: 20px;\">\r\n            <h2>환자 정보</h2>\r\n            ${Object.entries(this.currentScenario.personal_info || {}).map(([key, value]) => \r\n              `<p><strong>${this.formatKey(key)}:</strong> ${this.formatValue(value)}</p>`\r\n            ).join('')}\r\n          </div>\r\n          \r\n          ${this.currentScenario.additional_info ? `\r\n            <div style=\"margin-bottom: 20px;\">\r\n              <h2>기타 사항</h2>\r\n              <p>${this.currentScenario.additional_info}</p>\r\n            </div>\r\n          ` : ''}\r\n          \r\n          <div style=\"margin-bottom: 20px;\">\r\n            <h2>시나리오 내용</h2>\r\n            <div>${this.formattedContent}</div>\r\n          </div>\r\n          \r\n          ${this.hasPatientConversation ? `\r\n            <div>\r\n              <h2>환자와의 대화</h2>\r\n              <div>${this.formattedConversation}</div>\r\n            </div>\r\n          ` : ''}\r\n        </div>\r\n      `;\r\n      \r\n      // PDF 옵션 설정\r\n      const options = {\r\n        margin: 10,\r\n        filename: `${this.currentScenario.title}_시나리오.pdf`,\r\n        image: { type: 'jpeg', quality: 0.98 },\r\n        html2canvas: { scale: 2 },\r\n        jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' }\r\n      };\r\n      \r\n      // PDF 생성 및 다운로드\r\n      html2pdf().from(element).set(options).save().then(() => {\r\n        // 로딩 메시지 해제\r\n        this.proxy.$mitt.emit('set-loading', [false, '']);\r\n      }).catch(error => {\r\n        console.error('PDF 생성 오류:', error);\r\n        // 로딩 메시지 해제\r\n        this.proxy.$mitt.emit('set-loading', [false, '']);\r\n      });\r\n    },\r\n    async deleteScenario() {\r\n      try {\r\n        this.deleting = true;\r\n        // 로딩 메시지 설정\r\n        this.proxy.$mitt.emit('set-loading', [true, '시나리오를 삭제하는 중입니다...']);\r\n        \r\n        await this.$store.dispatch('deleteScenario', this.id);\r\n        \r\n        // 로딩 메시지 해제\r\n        this.proxy.$mitt.emit('set-loading', [false, '']);\r\n        this.showDeleteModal = false;\r\n        \r\n        // 삭제 성공 후 목록 페이지로 이동\r\n        this.$router.push({ name: 'ScenarioList' });\r\n      } catch (error) {\r\n        console.error('시나리오 삭제 실패:', error);\r\n        // 로딩 메시지 해제\r\n        this.proxy.$mitt.emit('set-loading', [false, '']);\r\n        this.deleting = false;\r\n        alert('시나리오 삭제 중 오류가 발생했습니다: ' + error.message);\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    // 시나리오 정보 로드\r\n    if (!this.currentScenario || this.currentScenario.id !== parseInt(this.id)) {\r\n      try {\r\n        // 로딩 메시지 설정\r\n        this.proxy.$mitt.emit('set-loading', [true, '시나리오를 불러오는 중입니다...']);\r\n        \r\n        await this.$store.dispatch('fetchScenario', this.id)\r\n        console.log('로드된 시나리오:', this.currentScenario)\r\n        \r\n        // 환자와의 대화 확인\r\n        if (this.currentScenario && !this.currentScenario.patient_conversation) {\r\n          console.warn('환자와의 대화가 없습니다.')\r\n        }\r\n        \r\n        // 로딩 메시지 해제\r\n        this.proxy.$mitt.emit('set-loading', [false, '']);\r\n      } catch (error) {\r\n        console.error('시나리오 로드 실패:', error)\r\n        // 로딩 메시지 해제\r\n        this.proxy.$mitt.emit('set-loading', [false, '']);\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scenario-detail {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.scenario-content, .scenario-conversation {\r\n  background-color: #f8f9fa;\r\n  border-radius: 5px;\r\n  padding: 20px;\r\n  height: 100%;\r\n  min-height: 400px;\r\n  overflow-y: auto;\r\n}\r\n\r\n.scenario-text, .conversation-text {\r\n  white-space: pre-wrap;\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n}\r\n\r\n/* 모달 관련 스타일 */\r\n.modal-wrapper {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 1050;\r\n}\r\n\r\n.modal-custom {\r\n  position: relative;\r\n  z-index: 1060;\r\n  pointer-events: auto;\r\n}\r\n\r\n.modal-backdrop-custom {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1050;\r\n  pointer-events: none;\r\n}\r\n\r\n/* Markdown 스타일 */\r\n:deep(h1) {\r\n  font-size: 1.8rem;\r\n  margin-top: 1.5rem;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n:deep(h2) {\r\n  font-size: 1.5rem;\r\n  margin-top: 1.2rem;\r\n  margin-bottom: 0.8rem;\r\n}\r\n\r\n:deep(h3) {\r\n  font-size: 1.3rem;\r\n  margin-top: 1rem;\r\n  margin-bottom: 0.6rem;\r\n}\r\n\r\n:deep(ul), :deep(ol) {\r\n  padding-left: 1.5rem;\r\n}\r\n\r\n:deep(li) {\r\n  margin-bottom: 0.3rem;\r\n}\r\n\r\n:deep(p) {\r\n  margin-bottom: 0.8rem;\r\n}\r\n\r\n:deep(strong) {\r\n  font-weight: 600;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}