{"ast":null,"code":"import { mapGetters } from 'vuex';\nexport default {\n  name: 'ScenarioCreate',\n  data() {\n    return {\n      form: {\n        title: '',\n        main_disease: '',\n        personal_info: {\n          gender: '',\n          age: '',\n          medical_history: [],\n          medical_history_other: '',\n          medical_history_none: false,\n          family_history: [],\n          family_history_other: '',\n          family_history_none: false,\n          allergies: [],\n          allergies_other: '',\n          allergies_none: false,\n          vital_signs: '정상',\n          vital_signs_detail: '',\n          symptoms: [],\n          symptoms_other: '',\n          symptoms_none: false\n        },\n        additional_info: ''\n      },\n      ageType: '',\n      customAge: '',\n      ageOptions: ['영아', '소아', '청소년', '성인', '노인'],\n      medicalHistoryOptions: ['고혈압', '당뇨', '심장질환', '기타'],\n      familyHistoryOptions: ['고혈압', '당뇨', '심장질환', '기타'],\n      allergyOptions: ['약물', '음식', '기타'],\n      symptomOptions: ['호흡곤란', '흉통', '발열', '기타']\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'error']),\n    loading() {\n      return this.isLoading;\n    }\n  },\n  watch: {\n    customAge(newVal) {\n      if (this.ageType === 'custom' && newVal) {\n        this.form.personal_info.age = newVal + '세';\n      }\n    }\n  },\n  methods: {\n    toggleNone(field) {\n      if (field === 'medical_history') {\n        if (this.form.personal_info.medical_history_none) {\n          this.form.personal_info.medical_history = [];\n        }\n      } else if (field === 'family_history') {\n        if (this.form.personal_info.family_history_none) {\n          this.form.personal_info.family_history = [];\n        }\n      } else if (field === 'allergies') {\n        if (this.form.personal_info.allergies_none) {\n          this.form.personal_info.allergies = [];\n        }\n      } else if (field === 'symptoms') {\n        if (this.form.personal_info.symptoms_none) {\n          this.form.personal_info.symptoms = [];\n        }\n      }\n    },\n    async createScenario() {\n      try {\n        // 개인 정보 처리\n        const personalInfo = {\n          ...this.form.personal_info\n        };\n\n        // 나이 처리\n        if (this.ageType === 'custom' && this.customAge) {\n          personalInfo.age = this.customAge + '세';\n        }\n\n        // 없음 처리\n        if (personalInfo.medical_history_none) {\n          personalInfo.medical_history = ['없음'];\n        } else {\n          // 기타 항목 처리\n          if (personalInfo.medical_history.includes('기타') && personalInfo.medical_history_other) {\n            personalInfo.medical_history = personalInfo.medical_history.filter(item => item !== '기타');\n            personalInfo.medical_history.push(personalInfo.medical_history_other);\n          }\n        }\n        if (personalInfo.family_history_none) {\n          personalInfo.family_history = ['없음'];\n        } else {\n          if (personalInfo.family_history.includes('기타') && personalInfo.family_history_other) {\n            personalInfo.family_history = personalInfo.family_history.filter(item => item !== '기타');\n            personalInfo.family_history.push(personalInfo.family_history_other);\n          }\n        }\n        if (personalInfo.allergies_none) {\n          personalInfo.allergies = ['없음'];\n        } else {\n          if (personalInfo.allergies.includes('기타') && personalInfo.allergies_other) {\n            personalInfo.allergies = personalInfo.allergies.filter(item => item !== '기타');\n            personalInfo.allergies.push(personalInfo.allergies_other);\n          }\n        }\n        if (personalInfo.symptoms_none) {\n          personalInfo.symptoms = ['없음'];\n        } else {\n          if (personalInfo.symptoms.includes('기타') && personalInfo.symptoms_other) {\n            personalInfo.symptoms = personalInfo.symptoms.filter(item => item !== '기타');\n            personalInfo.symptoms.push(personalInfo.symptoms_other);\n          }\n        }\n\n        // 비정상 활력징후 처리\n        if (personalInfo.vital_signs === '비정상' && personalInfo.vital_signs_detail) {\n          personalInfo.vital_signs = `비정상(${personalInfo.vital_signs_detail})`;\n        }\n\n        // 불필요한 필드 제거\n        delete personalInfo.medical_history_other;\n        delete personalInfo.family_history_other;\n        delete personalInfo.allergies_other;\n        delete personalInfo.symptoms_other;\n        delete personalInfo.vital_signs_detail;\n        delete personalInfo.medical_history_none;\n        delete personalInfo.family_history_none;\n        delete personalInfo.allergies_none;\n        delete personalInfo.symptoms_none;\n\n        // 필수 입력 확인\n        if (!this.form.title) {\n          throw new Error('시나리오명을 입력해주세요.');\n        }\n        if (!this.form.main_disease) {\n          throw new Error('주요 질병을 입력해주세요.');\n        }\n        if (!personalInfo.gender) {\n          throw new Error('성별을 선택해주세요.');\n        }\n        if (!personalInfo.age) {\n          throw new Error('나이를 선택하거나 입력해주세요.');\n        }\n\n        // 시나리오 생성 요청\n        const scenarioData = {\n          title: this.form.title,\n          main_disease: this.form.main_disease,\n          personal_info: personalInfo,\n          additional_info: this.form.additional_info,\n          past_medical_history: personalInfo.medical_history.join(', '),\n          family_history: personalInfo.family_history.join(', '),\n          allergies: personalInfo.allergies.join(', '),\n          major_symptoms: personalInfo.symptoms.join(', ')\n        };\n\n        // 로그인 상태 확인\n        if (!this.$store.getters.isLoggedIn) {\n          this.$store.commit('SET_ERROR', '로그인이 필요합니다. 로그인 후 다시 시도해주세요.');\n          return;\n        }\n        const response = await this.$store.dispatch('createScenario', scenarioData);\n\n        // 생성된 시나리오 페이지로 이동\n        this.$router.push({\n          name: 'ScenarioDetail',\n          params: {\n            id: response.id\n          }\n        });\n      } catch (error) {\n        console.error('시나리오 생성 실패:', error);\n        // 에러 메시지 설정\n        this.$store.commit('SET_ERROR', error.message || '시나리오 생성 중 오류가 발생했습니다.');\n        // 페이지 상단으로 스크롤\n        window.scrollTo(0, 0);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","name","data","form","title","main_disease","personal_info","gender","age","medical_history","medical_history_other","medical_history_none","family_history","family_history_other","family_history_none","allergies","allergies_other","allergies_none","vital_signs","vital_signs_detail","symptoms","symptoms_other","symptoms_none","additional_info","ageType","customAge","ageOptions","medicalHistoryOptions","familyHistoryOptions","allergyOptions","symptomOptions","computed","loading","isLoading","watch","newVal","methods","toggleNone","field","createScenario","personalInfo","includes","filter","item","push","Error","scenarioData","past_medical_history","join","major_symptoms","$store","getters","isLoggedIn","commit","response","dispatch","$router","params","id","error","console","message","window","scrollTo"],"sources":["D:\\간호시뮬레이션\\frontend\\src\\views\\ScenarioCreate.vue"],"sourcesContent":["<template>\r\n  <div class=\"scenario-create\">\r\n    <h1 class=\"mb-4\">시나리오 생성</h1>\r\n    \r\n    <div v-if=\"error\" class=\"alert alert-danger\">\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <form @submit.prevent=\"createScenario\" class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"title\" class=\"form-label\">시나리오명 *</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"form.title\" required>\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n          <label for=\"main_disease\" class=\"form-label\">주요 질병 *</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"main_disease\" v-model=\"form.main_disease\" required>\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n          <label class=\"form-label\">기본 인적 사항</label>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">성별</h5>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gender-male\" value=\"남\" v-model=\"form.personal_info.gender\">\r\n                <label class=\"form-check-label\" for=\"gender-male\">남</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gender-female\" value=\"여\" v-model=\"form.personal_info.gender\">\r\n                <label class=\"form-check-label\" for=\"gender-female\">여</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">나이</h5>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-check form-check-inline\" v-for=\"(age, index) in ageOptions\" :key=\"index\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"age\" :id=\"'age-' + index\" :value=\"age\" v-model=\"form.personal_info.age\">\r\n                    <label class=\"form-check-label\" :for=\"'age-' + index\">{{ age }}</label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"age\" id=\"age-custom\" value=\"custom\" v-model=\"ageType\">\r\n                    <label class=\"form-check-label\" for=\"age-custom\">직접 입력</label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\" v-if=\"ageType === 'custom'\">\r\n                  <div class=\"input-group\">\r\n                    <input type=\"number\" class=\"form-control\" placeholder=\"나이 입력\" v-model=\"customAge\" min=\"1\" max=\"120\">\r\n                    <span class=\"input-group-text\">세</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">과거력</h5>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"history-none\" value=\"없음\" v-model=\"form.personal_info.medical_history_none\" @change=\"toggleNone('medical_history')\">\r\n                <label class=\"form-check-label\" for=\"history-none\">없음</label>\r\n              </div>\r\n              <div v-if=\"!form.personal_info.medical_history_none\">\r\n                <div class=\"form-check\" v-for=\"(history, index) in medicalHistoryOptions\" :key=\"index\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" :id=\"'history-' + index\" :value=\"history\" v-model=\"form.personal_info.medical_history\">\r\n                  <label class=\"form-check-label\" :for=\"'history-' + index\">{{ history }}</label>\r\n                </div>\r\n                <div class=\"mt-2\" v-if=\"form.personal_info.medical_history.includes('기타')\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"기타 과거력을 입력하세요\" v-model=\"form.personal_info.medical_history_other\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">가족력</h5>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"family-none\" value=\"없음\" v-model=\"form.personal_info.family_history_none\" @change=\"toggleNone('family_history')\">\r\n                <label class=\"form-check-label\" for=\"family-none\">없음</label>\r\n              </div>\r\n              <div v-if=\"!form.personal_info.family_history_none\">\r\n                <div class=\"form-check\" v-for=\"(history, index) in familyHistoryOptions\" :key=\"index\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" :id=\"'family-' + index\" :value=\"history\" v-model=\"form.personal_info.family_history\">\r\n                  <label class=\"form-check-label\" :for=\"'family-' + index\">{{ history }}</label>\r\n                </div>\r\n                <div class=\"mt-2\" v-if=\"form.personal_info.family_history.includes('기타')\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"기타 가족력을 입력하세요\" v-model=\"form.personal_info.family_history_other\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">알레르기</h5>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"allergy-none\" value=\"없음\" v-model=\"form.personal_info.allergies_none\" @change=\"toggleNone('allergies')\">\r\n                <label class=\"form-check-label\" for=\"allergy-none\">없음</label>\r\n              </div>\r\n              <div v-if=\"!form.personal_info.allergies_none\">\r\n                <div class=\"form-check\" v-for=\"(allergy, index) in allergyOptions\" :key=\"index\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" :id=\"'allergy-' + index\" :value=\"allergy\" v-model=\"form.personal_info.allergies\">\r\n                  <label class=\"form-check-label\" :for=\"'allergy-' + index\">{{ allergy }}</label>\r\n                </div>\r\n                <div class=\"mt-2\" v-if=\"form.personal_info.allergies.includes('기타')\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"기타 알레르기를 입력하세요\" v-model=\"form.personal_info.allergies_other\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">활력징후</h5>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"vital_signs\" id=\"vital-normal\" value=\"정상\" v-model=\"form.personal_info.vital_signs\">\r\n                <label class=\"form-check-label\" for=\"vital-normal\">정상</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"vital_signs\" id=\"vital-abnormal\" value=\"비정상\" v-model=\"form.personal_info.vital_signs\">\r\n                <label class=\"form-check-label\" for=\"vital-abnormal\">비정상</label>\r\n              </div>\r\n              <div class=\"mt-2\" v-if=\"form.personal_info.vital_signs === '비정상'\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"비정상 활력징후를 입력하세요\" v-model=\"form.personal_info.vital_signs_detail\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">주요증상</h5>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"symptom-none\" value=\"없음\" v-model=\"form.personal_info.symptoms_none\" @change=\"toggleNone('symptoms')\">\r\n                <label class=\"form-check-label\" for=\"symptom-none\">없음</label>\r\n              </div>\r\n              <div v-if=\"!form.personal_info.symptoms_none\">\r\n                <div class=\"form-check\" v-for=\"(symptom, index) in symptomOptions\" :key=\"index\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" :id=\"'symptom-' + index\" :value=\"symptom\" v-model=\"form.personal_info.symptoms\">\r\n                  <label class=\"form-check-label\" :for=\"'symptom-' + index\">{{ symptom }}</label>\r\n                </div>\r\n                <div class=\"mt-2\" v-if=\"form.personal_info.symptoms.includes('기타')\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"기타 증상을 입력하세요\" v-model=\"form.personal_info.symptoms_other\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n          <label for=\"additional_info\" class=\"form-label\">기타 사항</label>\r\n          <textarea class=\"form-control\" id=\"additional_info\" rows=\"5\" v-model=\"form.additional_info\" placeholder=\"환자의 상태, 상황 등 추가 정보를 입력하세요\"></textarea>\r\n        </div>\r\n        \r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n            <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n            시나리오 생성\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\n\r\nexport default {\r\n  name: 'ScenarioCreate',\r\n  data() {\r\n    return {\r\n      form: {\r\n        title: '',\r\n        main_disease: '',\r\n        personal_info: {\r\n          gender: '',\r\n          age: '',\r\n          medical_history: [],\r\n          medical_history_other: '',\r\n          medical_history_none: false,\r\n          family_history: [],\r\n          family_history_other: '',\r\n          family_history_none: false,\r\n          allergies: [],\r\n          allergies_other: '',\r\n          allergies_none: false,\r\n          vital_signs: '정상',\r\n          vital_signs_detail: '',\r\n          symptoms: [],\r\n          symptoms_other: '',\r\n          symptoms_none: false\r\n        },\r\n        additional_info: ''\r\n      },\r\n      ageType: '',\r\n      customAge: '',\r\n      ageOptions: ['영아', '소아', '청소년', '성인', '노인'],\r\n      medicalHistoryOptions: ['고혈압', '당뇨', '심장질환', '기타'],\r\n      familyHistoryOptions: ['고혈압', '당뇨', '심장질환', '기타'],\r\n      allergyOptions: ['약물', '음식', '기타'],\r\n      symptomOptions: ['호흡곤란', '흉통', '발열', '기타']\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoading', 'error']),\r\n    loading() {\r\n      return this.isLoading\r\n    }\r\n  },\r\n  watch: {\r\n    customAge(newVal) {\r\n      if (this.ageType === 'custom' && newVal) {\r\n        this.form.personal_info.age = newVal + '세'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    toggleNone(field) {\r\n      if (field === 'medical_history') {\r\n        if (this.form.personal_info.medical_history_none) {\r\n          this.form.personal_info.medical_history = []\r\n        }\r\n      } else if (field === 'family_history') {\r\n        if (this.form.personal_info.family_history_none) {\r\n          this.form.personal_info.family_history = []\r\n        }\r\n      } else if (field === 'allergies') {\r\n        if (this.form.personal_info.allergies_none) {\r\n          this.form.personal_info.allergies = []\r\n        }\r\n      } else if (field === 'symptoms') {\r\n        if (this.form.personal_info.symptoms_none) {\r\n          this.form.personal_info.symptoms = []\r\n        }\r\n      }\r\n    },\r\n    async createScenario() {\r\n      try {\r\n        // 개인 정보 처리\r\n        const personalInfo = { ...this.form.personal_info }\r\n        \r\n        // 나이 처리\r\n        if (this.ageType === 'custom' && this.customAge) {\r\n          personalInfo.age = this.customAge + '세'\r\n        }\r\n        \r\n        // 없음 처리\r\n        if (personalInfo.medical_history_none) {\r\n          personalInfo.medical_history = ['없음']\r\n        } else {\r\n          // 기타 항목 처리\r\n          if (personalInfo.medical_history.includes('기타') && personalInfo.medical_history_other) {\r\n            personalInfo.medical_history = personalInfo.medical_history.filter(item => item !== '기타')\r\n            personalInfo.medical_history.push(personalInfo.medical_history_other)\r\n          }\r\n        }\r\n        \r\n        if (personalInfo.family_history_none) {\r\n          personalInfo.family_history = ['없음']\r\n        } else {\r\n          if (personalInfo.family_history.includes('기타') && personalInfo.family_history_other) {\r\n            personalInfo.family_history = personalInfo.family_history.filter(item => item !== '기타')\r\n            personalInfo.family_history.push(personalInfo.family_history_other)\r\n          }\r\n        }\r\n        \r\n        if (personalInfo.allergies_none) {\r\n          personalInfo.allergies = ['없음']\r\n        } else {\r\n          if (personalInfo.allergies.includes('기타') && personalInfo.allergies_other) {\r\n            personalInfo.allergies = personalInfo.allergies.filter(item => item !== '기타')\r\n            personalInfo.allergies.push(personalInfo.allergies_other)\r\n          }\r\n        }\r\n        \r\n        if (personalInfo.symptoms_none) {\r\n          personalInfo.symptoms = ['없음']\r\n        } else {\r\n          if (personalInfo.symptoms.includes('기타') && personalInfo.symptoms_other) {\r\n            personalInfo.symptoms = personalInfo.symptoms.filter(item => item !== '기타')\r\n            personalInfo.symptoms.push(personalInfo.symptoms_other)\r\n          }\r\n        }\r\n        \r\n        // 비정상 활력징후 처리\r\n        if (personalInfo.vital_signs === '비정상' && personalInfo.vital_signs_detail) {\r\n          personalInfo.vital_signs = `비정상(${personalInfo.vital_signs_detail})`\r\n        }\r\n        \r\n        // 불필요한 필드 제거\r\n        delete personalInfo.medical_history_other\r\n        delete personalInfo.family_history_other\r\n        delete personalInfo.allergies_other\r\n        delete personalInfo.symptoms_other\r\n        delete personalInfo.vital_signs_detail\r\n        delete personalInfo.medical_history_none\r\n        delete personalInfo.family_history_none\r\n        delete personalInfo.allergies_none\r\n        delete personalInfo.symptoms_none\r\n        \r\n        // 필수 입력 확인\r\n        if (!this.form.title) {\r\n          throw new Error('시나리오명을 입력해주세요.')\r\n        }\r\n        \r\n        if (!this.form.main_disease) {\r\n          throw new Error('주요 질병을 입력해주세요.')\r\n        }\r\n        \r\n        if (!personalInfo.gender) {\r\n          throw new Error('성별을 선택해주세요.')\r\n        }\r\n        \r\n        if (!personalInfo.age) {\r\n          throw new Error('나이를 선택하거나 입력해주세요.')\r\n        }\r\n        \r\n        // 시나리오 생성 요청\r\n        const scenarioData = {\r\n          title: this.form.title,\r\n          main_disease: this.form.main_disease,\r\n          personal_info: personalInfo,\r\n          additional_info: this.form.additional_info,\r\n          past_medical_history: personalInfo.medical_history.join(', '),\r\n          family_history: personalInfo.family_history.join(', '),\r\n          allergies: personalInfo.allergies.join(', '),\r\n          major_symptoms: personalInfo.symptoms.join(', ')\r\n        }\r\n        \r\n        // 로그인 상태 확인\r\n        if (!this.$store.getters.isLoggedIn) {\r\n          this.$store.commit('SET_ERROR', '로그인이 필요합니다. 로그인 후 다시 시도해주세요.')\r\n          return\r\n        }\r\n        \r\n        const response = await this.$store.dispatch('createScenario', scenarioData)\r\n        \r\n        // 생성된 시나리오 페이지로 이동\r\n        this.$router.push({ name: 'ScenarioDetail', params: { id: response.id } })\r\n      } catch (error) {\r\n        console.error('시나리오 생성 실패:', error)\r\n        // 에러 메시지 설정\r\n        this.$store.commit('SET_ERROR', error.message || '시나리오 생성 중 오류가 발생했습니다.')\r\n        // 페이지 상단으로 스크롤\r\n        window.scrollTo(0, 0)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scenario-create {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card {\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-title {\r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n  margin-bottom: 1rem;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}