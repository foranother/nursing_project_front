{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nimport LoadingSpinner from '@/components/LoadingSpinner.vue';\nexport default {\n  name: 'App',\n  components: {\n    LoadingSpinner\n  },\n  data() {\n    return {\n      loadingMessage: ''\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoggedIn', 'currentUser', 'isAdmin', 'isLoading'])\n  },\n  methods: {\n    ...mapActions(['logout'])\n  },\n  created() {\n    // 페이지 로드 시 사용자 인증 상태 확인\n    this.$store.dispatch('checkAuth');\n\n    // 로딩 상태 변경 이벤트 리스너 등록\n    this.$root.$on('set-loading', (loading, message) => {\n      if (loading) {\n        this.loadingMessage = message || '처리 중입니다. 잠시만 기다려주세요...';\n      }\n    });\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","LoadingSpinner","name","components","data","loadingMessage","computed","methods","created","$store","dispatch","$root","$on","loading","message"],"sources":["D:\\간호시뮬레이션\\frontend\\src\\App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n      <div class=\"container\">\r\n        <router-link class=\"navbar-brand\" to=\"/\">간호 시뮬레이션 시나리오 플랫폼</router-link>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul class=\"navbar-nav me-auto\">\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/\">홈</router-link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <router-link class=\"nav-link\" to=\"/scenarios\">시나리오 목록</router-link>\r\n            </li>\r\n            <li class=\"nav-item\" v-if=\"isAdmin\">\r\n              <router-link class=\"nav-link\" to=\"/create\">시나리오 생성</router-link>\r\n            </li>\r\n          </ul>\r\n          <div class=\"d-flex\">\r\n            <template v-if=\"isLoggedIn\">\r\n              <span class=\"navbar-text me-3\">{{ currentUser.username }}</span>\r\n              <button class=\"btn btn-outline-light\" @click=\"logout\">로그아웃</button>\r\n            </template>\r\n            <template v-else>\r\n              <router-link class=\"btn btn-outline-light me-2\" to=\"/login\">로그인</router-link>\r\n              <router-link class=\"btn btn-light\" to=\"/register\">회원가입</router-link>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n    <div class=\"container mt-4\">\r\n      <router-view />\r\n    </div>\r\n\r\n    <footer class=\"bg-light py-4 mt-5\">\r\n      <div class=\"container text-center\">\r\n        <p class=\"mb-0\">&copy; 2023 간호 시뮬레이션 시나리오 플랫폼. All rights reserved.</p>\r\n      </div>\r\n    </footer>\r\n    \r\n    <!-- 로딩 스피너 -->\r\n    <loading-spinner :loading=\"isLoading\" :message=\"loadingMessage\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport LoadingSpinner from '@/components/LoadingSpinner.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    LoadingSpinner\r\n  },\r\n  data() {\r\n    return {\r\n      loadingMessage: ''\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoggedIn', 'currentUser', 'isAdmin', 'isLoading'])\r\n  },\r\n  methods: {\r\n    ...mapActions(['logout'])\r\n  },\r\n  created() {\r\n    // 페이지 로드 시 사용자 인증 상태 확인\r\n    this.$store.dispatch('checkAuth')\r\n    \r\n    // 로딩 상태 변경 이벤트 리스너 등록\r\n    this.$root.$on('set-loading', (loading, message) => {\r\n      if (loading) {\r\n        this.loadingMessage = message || '처리 중입니다. 잠시만 기다려주세요...';\r\n      }\r\n    });\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n@import url('https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css');\r\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&display=swap');\r\n\r\nbody {\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  background-color: #f8f9fa;\r\n}\r\n\r\n#app {\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n}\r\n\r\n.container {\r\n  flex: 1;\r\n}\r\n\r\n.navbar-brand {\r\n  font-weight: 700;\r\n}\r\n\r\n.nav-link {\r\n  font-weight: 500;\r\n}\r\n\r\nfooter {\r\n  margin-top: auto;\r\n}\r\n</style> "],"mappings":"AAkDA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAK;AAC5C,OAAOC,cAAa,MAAO,iCAAgC;AAE3D,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE;IAClB;EACF,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGP,UAAU,CAAC,CAAC,YAAY,EAAE,aAAa,EAAE,SAAS,EAAE,WAAW,CAAC;EACrE,CAAC;EACDQ,OAAO,EAAE;IACP,GAAGP,UAAU,CAAC,CAAC,QAAQ,CAAC;EAC1B,CAAC;EACDQ,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,WAAW;;IAEhC;IACA,IAAI,CAACC,KAAK,CAACC,GAAG,CAAC,aAAa,EAAE,CAACC,OAAO,EAAEC,OAAO,KAAK;MAClD,IAAID,OAAO,EAAE;QACX,IAAI,CAACR,cAAa,GAAIS,OAAM,IAAK,wBAAwB;MAC3D;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}