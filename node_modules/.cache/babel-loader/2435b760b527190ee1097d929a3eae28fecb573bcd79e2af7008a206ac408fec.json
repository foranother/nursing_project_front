{"ast":null,"code":"import { mapGetters } from 'vuex';\nimport { getCurrentInstance } from 'vue';\nexport default {\n  name: 'ScenarioCreate',\n  data() {\n    return {\n      form: {\n        title: '',\n        main_disease: '',\n        personal_info: {\n          gender: '',\n          age: '',\n          medical_history: [],\n          medical_history_other: '',\n          medical_history_none: false,\n          family_history: [],\n          family_history_other: '',\n          family_history_none: false,\n          allergies: [],\n          allergies_other: '',\n          allergies_none: false,\n          vital_signs: '정상',\n          vital_signs_detail: '',\n          symptoms: [],\n          symptoms_other: '',\n          symptoms_none: false\n        },\n        additional_info: ''\n      },\n      ageType: '',\n      customAge: '',\n      ageOptions: ['영아', '소아', '청소년', '성인', '노인'],\n      medicalHistoryOptions: ['고혈압', '당뇨', '심장질환', '기타'],\n      familyHistoryOptions: ['고혈압', '당뇨', '심장질환', '기타'],\n      allergyOptions: ['약물', '음식', '기타'],\n      symptomOptions: ['호흡곤란', '흉통', '발열', '기타']\n    };\n  },\n  computed: {\n    ...mapGetters(['isLoading', 'error']),\n    loading() {\n      return this.isLoading;\n    }\n  },\n  setup() {\n    const {\n      proxy\n    } = getCurrentInstance();\n    return {\n      proxy\n    };\n  },\n  watch: {\n    customAge(newVal) {\n      if (this.ageType === 'custom' && newVal) {\n        this.form.personal_info.age = newVal + '세';\n      }\n    }\n  },\n  methods: {\n    // 연령대에 따른 랜덤 나이 생성\n    generateRandomAge() {\n      if (this.ageType === 'custom') return;\n      let min, max;\n      switch (this.ageType) {\n        case '영아':\n          min = 0;\n          max = 1;\n          break;\n        case '소아':\n          min = 2;\n          max = 12;\n          break;\n        case '청소년':\n          min = 13;\n          max = 19;\n          break;\n        case '성인':\n          min = 20;\n          max = 64;\n          break;\n        case '노인':\n          min = 65;\n          max = 90;\n          break;\n        default:\n          return;\n      }\n\n      // 범위 내 랜덤 나이 생성\n      const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;\n      this.form.personal_info.age = randomAge + '세';\n    },\n    toggleNone(field) {\n      if (field === 'medical_history') {\n        if (this.form.personal_info.medical_history_none) {\n          this.form.personal_info.medical_history = [];\n        }\n      } else if (field === 'family_history') {\n        if (this.form.personal_info.family_history_none) {\n          this.form.personal_info.family_history = [];\n        }\n      } else if (field === 'allergies') {\n        if (this.form.personal_info.allergies_none) {\n          this.form.personal_info.allergies = [];\n        }\n      } else if (field === 'symptoms') {\n        if (this.form.personal_info.symptoms_none) {\n          this.form.personal_info.symptoms = [];\n        }\n      }\n    },\n    async createScenario() {\n      try {\n        // 로딩 메시지 설정\n        this.proxy.$mitt.emit('set-loading', [true, '시나리오를 생성하는 중입니다. 이 작업은 최대 1분 정도 소요될 수 있습니다.']);\n\n        // 개인 정보 처리\n        const personalInfo = {\n          ...this.form.personal_info\n        };\n\n        // 나이 처리\n        if (this.ageType === 'custom' && this.customAge) {\n          personalInfo.age = this.customAge + '세';\n        }\n\n        // 과거력 처리\n        if (personalInfo.medical_history_none) {\n          personalInfo.medical_history = ['없음'];\n        } else if (personalInfo.medical_history.includes('기타') && personalInfo.medical_history_other) {\n          const index = personalInfo.medical_history.indexOf('기타');\n          personalInfo.medical_history[index] = '기타: ' + personalInfo.medical_history_other;\n        }\n\n        // 가족력 처리\n        if (personalInfo.family_history_none) {\n          personalInfo.family_history = ['없음'];\n        } else if (personalInfo.family_history.includes('기타') && personalInfo.family_history_other) {\n          const index = personalInfo.family_history.indexOf('기타');\n          personalInfo.family_history[index] = '기타: ' + personalInfo.family_history_other;\n        }\n\n        // 알레르기 처리\n        if (personalInfo.allergies_none) {\n          personalInfo.allergies = ['없음'];\n        } else if (personalInfo.allergies.includes('기타') && personalInfo.allergies_other) {\n          const index = personalInfo.allergies.indexOf('기타');\n          personalInfo.allergies[index] = '기타: ' + personalInfo.allergies_other;\n        }\n\n        // 증상 처리\n        if (personalInfo.symptoms_none) {\n          personalInfo.symptoms = ['없음'];\n        } else if (personalInfo.symptoms.includes('기타') && personalInfo.symptoms_other) {\n          const index = personalInfo.symptoms.indexOf('기타');\n          personalInfo.symptoms[index] = '기타: ' + personalInfo.symptoms_other;\n        }\n\n        // 활력징후 처리\n        if (personalInfo.vital_signs === '비정상' && personalInfo.vital_signs_detail) {\n          personalInfo.vital_signs = '비정상: ' + personalInfo.vital_signs_detail;\n        }\n\n        // 불필요한 필드 제거\n        delete personalInfo.medical_history_other;\n        delete personalInfo.medical_history_none;\n        delete personalInfo.family_history_other;\n        delete personalInfo.family_history_none;\n        delete personalInfo.allergies_other;\n        delete personalInfo.allergies_none;\n        delete personalInfo.symptoms_other;\n        delete personalInfo.symptoms_none;\n        delete personalInfo.vital_signs_detail;\n\n        // 시나리오 데이터 준비\n        const scenarioData = {\n          title: this.form.title,\n          main_disease: this.form.main_disease,\n          personal_info: personalInfo,\n          additional_info: {\n            past_medical_history: personalInfo.medical_history.join(', '),\n            family_history: personalInfo.family_history.join(', '),\n            allergies: personalInfo.allergies.join(', '),\n            major_symptoms: personalInfo.symptoms.join(', '),\n            description: this.form.additional_info\n          }\n        };\n\n        // 시나리오 생성 요청\n        const scenario = await this.$store.dispatch('createScenario', scenarioData);\n\n        // 로딩 메시지 해제\n        this.proxy.$mitt.emit('set-loading', [false, '']);\n\n        // 생성된 시나리오 페이지로 이동\n        this.$router.push({\n          name: 'ScenarioDetail',\n          params: {\n            id: scenario.id\n          }\n        });\n      } catch (error) {\n        // 로딩 메시지 해제\n        this.proxy.$mitt.emit('set-loading', [false, '']);\n        console.error('시나리오 생성 오류:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","getCurrentInstance","name","data","form","title","main_disease","personal_info","gender","age","medical_history","medical_history_other","medical_history_none","family_history","family_history_other","family_history_none","allergies","allergies_other","allergies_none","vital_signs","vital_signs_detail","symptoms","symptoms_other","symptoms_none","additional_info","ageType","customAge","ageOptions","medicalHistoryOptions","familyHistoryOptions","allergyOptions","symptomOptions","computed","loading","isLoading","setup","proxy","watch","newVal","methods","generateRandomAge","min","max","randomAge","Math","floor","random","toggleNone","field","createScenario","$mitt","emit","personalInfo","includes","index","indexOf","scenarioData","past_medical_history","join","major_symptoms","description","scenario","$store","dispatch","$router","push","params","id","error","console"],"sources":["D:\\간호시뮬레이션\\frontend\\src\\views\\ScenarioCreate.vue"],"sourcesContent":["<template>\r\n  <div class=\"scenario-create\">\r\n    <h1 class=\"mb-4\">시나리오 생성</h1>\r\n    \r\n    <div v-if=\"error\" class=\"alert alert-danger\">\r\n      {{ error }}\r\n    </div>\r\n    \r\n    <form @submit.prevent=\"createScenario\" class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"mb-3\">\r\n          <label for=\"title\" class=\"form-label\">시나리오명 *</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"form.title\" required>\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n          <label for=\"main_disease\" class=\"form-label\">주요 질병 *</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"main_disease\" v-model=\"form.main_disease\" required>\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n          <label class=\"form-label\">기본 인적 사항</label>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">성별</h5>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gender-male\" value=\"남\" v-model=\"form.personal_info.gender\">\r\n                <label class=\"form-check-label\" for=\"gender-male\">남</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gender\" id=\"gender-female\" value=\"여\" v-model=\"form.personal_info.gender\">\r\n                <label class=\"form-check-label\" for=\"gender-female\">여</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">나이</h5>\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"form-check form-check-inline\" v-for=\"(age, index) in ageOptions\" :key=\"index\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"age\" :id=\"'age-' + index\" :value=\"age\" v-model=\"ageType\" @change=\"generateRandomAge\">\r\n                    <label class=\"form-check-label\" :for=\"'age-' + index\">{{ age }}</label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" name=\"age\" id=\"age-custom\" value=\"custom\" v-model=\"ageType\">\r\n                    <label class=\"form-check-label\" for=\"age-custom\">직접 입력</label>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <div class=\"input-group\" v-if=\"ageType === 'custom'\">\r\n                    <input type=\"number\" class=\"form-control\" placeholder=\"나이 입력\" v-model=\"customAge\" min=\"1\" max=\"120\">\r\n                    <span class=\"input-group-text\">세</span>\r\n                  </div>\r\n                  <div v-else-if=\"ageType && form.personal_info.age\" class=\"mt-2\">\r\n                    선택된 나이: {{ form.personal_info.age }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">과거력</h5>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"history-none\" value=\"없음\" v-model=\"form.personal_info.medical_history_none\" @change=\"toggleNone('medical_history')\">\r\n                <label class=\"form-check-label\" for=\"history-none\">없음</label>\r\n              </div>\r\n              <div v-if=\"!form.personal_info.medical_history_none\">\r\n                <div class=\"form-check\" v-for=\"(history, index) in medicalHistoryOptions\" :key=\"index\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" :id=\"'history-' + index\" :value=\"history\" v-model=\"form.personal_info.medical_history\">\r\n                  <label class=\"form-check-label\" :for=\"'history-' + index\">{{ history }}</label>\r\n                </div>\r\n                <div class=\"mt-2\" v-if=\"form.personal_info.medical_history.includes('기타')\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"기타 과거력을 입력하세요\" v-model=\"form.personal_info.medical_history_other\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">가족력</h5>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"family-none\" value=\"없음\" v-model=\"form.personal_info.family_history_none\" @change=\"toggleNone('family_history')\">\r\n                <label class=\"form-check-label\" for=\"family-none\">없음</label>\r\n              </div>\r\n              <div v-if=\"!form.personal_info.family_history_none\">\r\n                <div class=\"form-check\" v-for=\"(history, index) in familyHistoryOptions\" :key=\"index\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" :id=\"'family-' + index\" :value=\"history\" v-model=\"form.personal_info.family_history\">\r\n                  <label class=\"form-check-label\" :for=\"'family-' + index\">{{ history }}</label>\r\n                </div>\r\n                <div class=\"mt-2\" v-if=\"form.personal_info.family_history.includes('기타')\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"기타 가족력을 입력하세요\" v-model=\"form.personal_info.family_history_other\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">알레르기</h5>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"allergy-none\" value=\"없음\" v-model=\"form.personal_info.allergies_none\" @change=\"toggleNone('allergies')\">\r\n                <label class=\"form-check-label\" for=\"allergy-none\">없음</label>\r\n              </div>\r\n              <div v-if=\"!form.personal_info.allergies_none\">\r\n                <div class=\"form-check\" v-for=\"(allergy, index) in allergyOptions\" :key=\"index\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" :id=\"'allergy-' + index\" :value=\"allergy\" v-model=\"form.personal_info.allergies\">\r\n                  <label class=\"form-check-label\" :for=\"'allergy-' + index\">{{ allergy }}</label>\r\n                </div>\r\n                <div class=\"mt-2\" v-if=\"form.personal_info.allergies.includes('기타')\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"기타 알레르기를 입력하세요\" v-model=\"form.personal_info.allergies_other\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">활력징후</h5>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"vital_signs\" id=\"vital-normal\" value=\"정상\" v-model=\"form.personal_info.vital_signs\">\r\n                <label class=\"form-check-label\" for=\"vital-normal\">정상</label>\r\n              </div>\r\n              <div class=\"form-check form-check-inline\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"vital_signs\" id=\"vital-abnormal\" value=\"비정상\" v-model=\"form.personal_info.vital_signs\">\r\n                <label class=\"form-check-label\" for=\"vital-abnormal\">비정상</label>\r\n              </div>\r\n              <div class=\"mt-2\" v-if=\"form.personal_info.vital_signs === '비정상'\">\r\n                <input type=\"text\" class=\"form-control\" placeholder=\"비정상 활력징후를 입력하세요\" v-model=\"form.personal_info.vital_signs_detail\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">주요증상</h5>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"symptom-none\" value=\"없음\" v-model=\"form.personal_info.symptoms_none\" @change=\"toggleNone('symptoms')\">\r\n                <label class=\"form-check-label\" for=\"symptom-none\">없음</label>\r\n              </div>\r\n              <div v-if=\"!form.personal_info.symptoms_none\">\r\n                <div class=\"form-check\" v-for=\"(symptom, index) in symptomOptions\" :key=\"index\">\r\n                  <input class=\"form-check-input\" type=\"checkbox\" :id=\"'symptom-' + index\" :value=\"symptom\" v-model=\"form.personal_info.symptoms\">\r\n                  <label class=\"form-check-label\" :for=\"'symptom-' + index\">{{ symptom }}</label>\r\n                </div>\r\n                <div class=\"mt-2\" v-if=\"form.personal_info.symptoms.includes('기타')\">\r\n                  <input type=\"text\" class=\"form-control\" placeholder=\"기타 증상을 입력하세요\" v-model=\"form.personal_info.symptoms_other\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"mb-3\">\r\n          <label for=\"additional_info\" class=\"form-label\">기타 사항</label>\r\n          <textarea class=\"form-control\" id=\"additional_info\" rows=\"5\" v-model=\"form.additional_info\" placeholder=\"환자의 상태, 상황 등 추가 정보를 입력하세요\"></textarea>\r\n        </div>\r\n        \r\n        <div class=\"d-grid\">\r\n          <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"loading\">\r\n            <span v-if=\"loading\" class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n            시나리오 생성\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { getCurrentInstance } from 'vue'\r\n\r\nexport default {\r\n  name: 'ScenarioCreate',\r\n  data() {\r\n    return {\r\n      form: {\r\n        title: '',\r\n        main_disease: '',\r\n        personal_info: {\r\n          gender: '',\r\n          age: '',\r\n          medical_history: [],\r\n          medical_history_other: '',\r\n          medical_history_none: false,\r\n          family_history: [],\r\n          family_history_other: '',\r\n          family_history_none: false,\r\n          allergies: [],\r\n          allergies_other: '',\r\n          allergies_none: false,\r\n          vital_signs: '정상',\r\n          vital_signs_detail: '',\r\n          symptoms: [],\r\n          symptoms_other: '',\r\n          symptoms_none: false\r\n        },\r\n        additional_info: ''\r\n      },\r\n      ageType: '',\r\n      customAge: '',\r\n      ageOptions: ['영아', '소아', '청소년', '성인', '노인'],\r\n      medicalHistoryOptions: ['고혈압', '당뇨', '심장질환', '기타'],\r\n      familyHistoryOptions: ['고혈압', '당뇨', '심장질환', '기타'],\r\n      allergyOptions: ['약물', '음식', '기타'],\r\n      symptomOptions: ['호흡곤란', '흉통', '발열', '기타']\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['isLoading', 'error']),\r\n    loading() {\r\n      return this.isLoading\r\n    }\r\n  },\r\n  setup() {\r\n    const { proxy } = getCurrentInstance()\r\n    return { proxy }\r\n  },\r\n  watch: {\r\n    customAge(newVal) {\r\n      if (this.ageType === 'custom' && newVal) {\r\n        this.form.personal_info.age = newVal + '세'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // 연령대에 따른 랜덤 나이 생성\r\n    generateRandomAge() {\r\n      if (this.ageType === 'custom') return;\r\n      \r\n      let min, max;\r\n      switch(this.ageType) {\r\n        case '영아':\r\n          min = 0; max = 1;\r\n          break;\r\n        case '소아':\r\n          min = 2; max = 12;\r\n          break;\r\n        case '청소년':\r\n          min = 13; max = 19;\r\n          break;\r\n        case '성인':\r\n          min = 20; max = 64;\r\n          break;\r\n        case '노인':\r\n          min = 65; max = 90;\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      \r\n      // 범위 내 랜덤 나이 생성\r\n      const randomAge = Math.floor(Math.random() * (max - min + 1)) + min;\r\n      this.form.personal_info.age = randomAge + '세';\r\n    },\r\n    toggleNone(field) {\r\n      if (field === 'medical_history') {\r\n        if (this.form.personal_info.medical_history_none) {\r\n          this.form.personal_info.medical_history = []\r\n        }\r\n      } else if (field === 'family_history') {\r\n        if (this.form.personal_info.family_history_none) {\r\n          this.form.personal_info.family_history = []\r\n        }\r\n      } else if (field === 'allergies') {\r\n        if (this.form.personal_info.allergies_none) {\r\n          this.form.personal_info.allergies = []\r\n        }\r\n      } else if (field === 'symptoms') {\r\n        if (this.form.personal_info.symptoms_none) {\r\n          this.form.personal_info.symptoms = []\r\n        }\r\n      }\r\n    },\r\n    async createScenario() {\r\n      try {\r\n        // 로딩 메시지 설정\r\n        this.proxy.$mitt.emit('set-loading', [true, '시나리오를 생성하는 중입니다. 이 작업은 최대 1분 정도 소요될 수 있습니다.']);\r\n        \r\n        // 개인 정보 처리\r\n        const personalInfo = { ...this.form.personal_info }\r\n        \r\n        // 나이 처리\r\n        if (this.ageType === 'custom' && this.customAge) {\r\n          personalInfo.age = this.customAge + '세'\r\n        }\r\n        \r\n        // 과거력 처리\r\n        if (personalInfo.medical_history_none) {\r\n          personalInfo.medical_history = ['없음']\r\n        } else if (personalInfo.medical_history.includes('기타') && personalInfo.medical_history_other) {\r\n          const index = personalInfo.medical_history.indexOf('기타')\r\n          personalInfo.medical_history[index] = '기타: ' + personalInfo.medical_history_other\r\n        }\r\n        \r\n        // 가족력 처리\r\n        if (personalInfo.family_history_none) {\r\n          personalInfo.family_history = ['없음']\r\n        } else if (personalInfo.family_history.includes('기타') && personalInfo.family_history_other) {\r\n          const index = personalInfo.family_history.indexOf('기타')\r\n          personalInfo.family_history[index] = '기타: ' + personalInfo.family_history_other\r\n        }\r\n        \r\n        // 알레르기 처리\r\n        if (personalInfo.allergies_none) {\r\n          personalInfo.allergies = ['없음']\r\n        } else if (personalInfo.allergies.includes('기타') && personalInfo.allergies_other) {\r\n          const index = personalInfo.allergies.indexOf('기타')\r\n          personalInfo.allergies[index] = '기타: ' + personalInfo.allergies_other\r\n        }\r\n        \r\n        // 증상 처리\r\n        if (personalInfo.symptoms_none) {\r\n          personalInfo.symptoms = ['없음']\r\n        } else if (personalInfo.symptoms.includes('기타') && personalInfo.symptoms_other) {\r\n          const index = personalInfo.symptoms.indexOf('기타')\r\n          personalInfo.symptoms[index] = '기타: ' + personalInfo.symptoms_other\r\n        }\r\n        \r\n        // 활력징후 처리\r\n        if (personalInfo.vital_signs === '비정상' && personalInfo.vital_signs_detail) {\r\n          personalInfo.vital_signs = '비정상: ' + personalInfo.vital_signs_detail\r\n        }\r\n        \r\n        // 불필요한 필드 제거\r\n        delete personalInfo.medical_history_other\r\n        delete personalInfo.medical_history_none\r\n        delete personalInfo.family_history_other\r\n        delete personalInfo.family_history_none\r\n        delete personalInfo.allergies_other\r\n        delete personalInfo.allergies_none\r\n        delete personalInfo.symptoms_other\r\n        delete personalInfo.symptoms_none\r\n        delete personalInfo.vital_signs_detail\r\n        \r\n        // 시나리오 데이터 준비\r\n        const scenarioData = {\r\n          title: this.form.title,\r\n          main_disease: this.form.main_disease,\r\n          personal_info: personalInfo,\r\n          additional_info: {\r\n            past_medical_history: personalInfo.medical_history.join(', '),\r\n            family_history: personalInfo.family_history.join(', '),\r\n            allergies: personalInfo.allergies.join(', '),\r\n            major_symptoms: personalInfo.symptoms.join(', '),\r\n            description: this.form.additional_info\r\n          }\r\n        }\r\n        \r\n        // 시나리오 생성 요청\r\n        const scenario = await this.$store.dispatch('createScenario', scenarioData)\r\n        \r\n        // 로딩 메시지 해제\r\n        this.proxy.$mitt.emit('set-loading', [false, '']);\r\n        \r\n        // 생성된 시나리오 페이지로 이동\r\n        this.$router.push({ name: 'ScenarioDetail', params: { id: scenario.id } })\r\n      } catch (error) {\r\n        // 로딩 메시지 해제\r\n        this.proxy.$mitt.emit('set-loading', [false, '']);\r\n        console.error('시나리오 생성 오류:', error)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scenario-create {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.card {\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-title {\r\n  font-size: 1.1rem;\r\n  font-weight: 500;\r\n  margin-bottom: 1rem;\r\n}\r\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}