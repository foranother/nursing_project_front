{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport mitt from 'mitt';\nimport axios from 'axios';\n\n// 이벤트 버스 생성\nconst emitter = mitt();\n\n// API 기본 URL 설정\naxios.defaults.baseURL = process.env.VUE_APP_API_URL || 'http://localhost:8000';\n\n// 샘플 시나리오 생성 함수 수정 (GPT API 호출로 변경)\nasync function createSampleScenarios() {\n  try {\n    // 백엔드 API를 통해 샘플 시나리오가 있는지 확인\n    const response = await axios.get('/api/scenarios/', {\n      params: {\n        is_sample: true\n      },\n      withCredentials: true\n    });\n    if (response.data.length === 0) {\n      console.log('샘플 시나리오 생성 시작 (GPT API 사용)');\n\n      // 샘플 시나리오 1: 급성 심근경색 (GPT API 호출)\n      const scenario1Data = {\n        title: \"급성 심근경색 환자 간호\",\n        main_disease: \"급성 심근경색\",\n        personal_info: {\n          age: \"65\",\n          gender: \"남성\",\n          occupation: \"회사원\"\n        },\n        additional_info: {\n          past_medical_history: \"고혈압, 당뇨병\",\n          family_history: \"부친이 심근경색으로 사망\",\n          allergies: \"없음\",\n          major_symptoms: \"가슴 통증, 호흡곤란, 발한\"\n        },\n        include_conversation: true,\n        is_sample: true\n      };\n      try {\n        // GPT API를 통해 시나리오 생성 \n        const gptResponse1 = await axios.post('/api/scenarios/generate/', scenario1Data, {\n          withCredentials: true,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('급성 심근경색 시나리오 생성 완료:', gptResponse1.data);\n\n        // 이미 저장되어 있어 별도 저장 불필요\n      } catch (scenario1Error) {\n        console.error('급성 심근경색 시나리오 생성 실패:', scenario1Error);\n        // 실패 시에는 로컬 스토리지에 저장\n        saveSampleToLocalStorage(\"급성 심근경색 환자 간호\", \"급성 심근경색\");\n      }\n\n      // 샘플 시나리오 2: 당뇨병성 케톤산증 (GPT API 호출)\n      const scenario2Data = {\n        title: \"당뇨병성 케톤산증 환자 간호\",\n        main_disease: \"당뇨병성 케톤산증\",\n        personal_info: {\n          age: \"22\",\n          gender: \"여성\",\n          occupation: \"대학생\"\n        },\n        additional_info: {\n          past_medical_history: \"제1형 당뇨병(10년)\",\n          family_history: \"없음\",\n          allergies: \"페니실린\",\n          major_symptoms: \"구갈, 다뇨, 복통, 오심, 구토\"\n        },\n        include_conversation: true,\n        is_sample: true\n      };\n      try {\n        // GPT API를 통해 시나리오 생성\n        const gptResponse2 = await axios.post('/api/scenarios/generate/', scenario2Data, {\n          withCredentials: true,\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('당뇨병성 케톤산증 시나리오 생성 완료:', gptResponse2.data);\n\n        // 이미 저장되어 있어 별도 저장 불필요\n      } catch (scenario2Error) {\n        console.error('당뇨병성 케톤산증 시나리오 생성 실패:', scenario2Error);\n        // 실패 시에는 로컬 스토리지에 저장\n        saveSampleToLocalStorage(\"당뇨병성 케톤산증 환자 간호\", \"당뇨병성 케톤산증\");\n      }\n      console.log('샘플 시나리오 생성 완료');\n    } else {\n      console.log('이미 샘플 시나리오가 존재합니다');\n    }\n  } catch (error) {\n    console.error('샘플 시나리오 생성 중 오류 발생:', error);\n\n    // 오류 시 로컬 저장 시도 (개발 단계에서)\n    try {\n      console.log('로컬 저장소에 샘플 시나리오 저장 시도');\n\n      // 샘플 시나리오 로컬에 저장\n      const hasSamples = checkLocalSamplesExist();\n      if (!hasSamples) {\n        // 샘플 시나리오 생성 및 저장\n        saveSampleToLocalStorage(\"급성 심근경색 환자 간호\", \"급성 심근경색\");\n        saveSampleToLocalStorage(\"당뇨병성 케톤산증 환자 간호\", \"당뇨병성 케톤산증\");\n        console.log('로컬 저장소에 샘플 시나리오 저장 완료');\n      } else {\n        console.log('로컬 저장소에 이미 샘플 시나리오가 존재합니다');\n      }\n    } catch (localError) {\n      console.error('로컬 저장소에 샘플 시나리오 저장 실패:', localError);\n    }\n  }\n}\n\n// 로컬 샘플 존재 여부 확인 함수\nfunction checkLocalSamplesExist() {\n  try {\n    const localScenarios = localStorage.getItem('tempScenarios');\n    if (localScenarios) {\n      const tempScenarios = JSON.parse(localScenarios);\n      return tempScenarios.some(s => s.is_sample === true);\n    }\n  } catch (e) {\n    console.error('로컬 저장소 확인 중 오류:', e);\n  }\n  return false;\n}\n\n// 로컬 저장소에 샘플 시나리오 저장 함수\nfunction saveSampleToLocalStorage(title, mainDisease) {\n  try {\n    // 기존 로컬 시나리오 불러오기\n    let tempScenarios = [];\n    const localScenarios = localStorage.getItem('tempScenarios');\n    if (localScenarios) {\n      tempScenarios = JSON.parse(localScenarios);\n    }\n\n    // 샘플 시나리오 생성\n    const sampleScenario = {\n      id: Date.now().toString(),\n      title: title,\n      main_disease: mainDisease,\n      is_sample: true,\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      created_by: {\n        id: \"admin-user-id\",\n        username: \"Admin\",\n        email: \"admin@example.com\",\n        is_admin: true\n      },\n      personal_info: {\n        age: title.includes(\"급성 심근경색\") ? \"65세\" : \"22세\",\n        gender: title.includes(\"급성 심근경색\") ? \"남성\" : \"여성\",\n        occupation: title.includes(\"급성 심근경색\") ? \"회사원\" : \"대학생\"\n      },\n      additional_info: {\n        past_medical_history: title.includes(\"급성 심근경색\") ? \"고혈압, 당뇨병\" : \"제1형 당뇨병(10년)\",\n        family_history: title.includes(\"급성 심근경색\") ? \"부친이 심근경색으로 사망\" : \"없음\",\n        allergies: title.includes(\"급성 심근경색\") ? \"없음\" : \"페니실린\",\n        major_symptoms: title.includes(\"급성 심근경색\") ? \"가슴 통증, 호흡곤란, 발한\" : \"구갈, 다뇨, 복통, 오심, 구토\"\n      },\n      content: `# ${title} 시나리오\n\n## 환자 정보\n- 이름: 환자 (가명)\n- 나이: ${title.includes(\"급성 심근경색\") ? \"65세\" : \"22세\"}\n- 성별: ${title.includes(\"급성 심근경색\") ? \"남성\" : \"여성\"}\n- 직업: ${title.includes(\"급성 심근경색\") ? \"회사원\" : \"대학생\"}\n- 과거력: ${title.includes(\"급성 심근경색\") ? \"고혈압, 당뇨병\" : \"제1형 당뇨병(10년)\"}\n- 가족력: ${title.includes(\"급성 심근경색\") ? \"부친이 심근경색으로 사망\" : \"없음\"}\n- 알레르기: ${title.includes(\"급성 심근경색\") ? \"없음\" : \"페니실린\"}\n\n## 주 증상\n- ${mainDisease}\n- ${title.includes(\"급성 심근경색\") ? \"가슴 통증, 호흡곤란, 발한\" : \"구갈, 다뇨, 복통, 오심, 구토\"}\n\n## 현재 상태\n- 의식: 명료\n- 활력징후: ${title.includes(\"급성 심근경색\") ? \"BP 150/90 mmHg, HR 100 bpm, RR 22/min, SpO2 94%, BT 37.2°C\" : \"BP 110/70 mmHg, HR 120 bpm, RR 24/min, SpO2 96%, BT 37.5°C\"}\n\n## 간호 중재\n1. 활력징후 모니터링\n2. 투약 관리\n3. 환자 교육\n4. 정서적 지지\n5. 의사와의 협력 및 소통\n\n## 간호 평가\n- 증상 완화 여부\n- 활력징후 안정화\n- 환자의 자가 관리 능력 향상\n`,\n      patient_conversation: `# 환자와의 대화\n\n## 초기 평가\n**간호사**: 안녕하세요, 저는 오늘 담당 간호사입니다. 어떻게 지내세요? 어디가 불편하신가요?\n\n**환자**: 안녕하세요, 간호사님. ${title.includes(\"급성 심근경색\") ? \"가슴이 너무 아파서 견딜 수가 없어요. 숨도 잘 안 쉬어지고 식은땀이 나요.\" : \"계속 목이 마르고 물을 많이 마셔도 갈증이 해소가 안 돼요. 그리고 소변을 자주 봐야 해서 힘들어요. 며칠 전부터는 배도 아프고 구역감도 있어요.\"}\n\n**간호사**: 언제부터 이런 증상이 있었나요?\n\n**환자**: ${title.includes(\"급성 심근경색\") ? \"오늘 아침에 갑자기 시작됐어요. 처음에는 소화가 안 되는 줄 알았는데, 점점 심해져서 병원에 왔어요.\" : \"약 3일 전부터 시작됐어요. 평소보다 당 조절이 잘 안 되는 것 같았는데, 어제부터 급격히 상태가 나빠졌어요.\"}\n\n## 검사 및 치료 중\n**간호사**: 검사 결과가 나왔습니다. ${mainDisease}로 확인되었습니다. 의사 선생님께서 곧 자세한 설명과 치료 계획을 알려주실 거예요.\n\n**환자**: 그렇군요. 치료는 어떻게 진행되나요?\n\n**간호사**: ${title.includes(\"급성 심근경색\") ? \"현재 심장 손상을 최소화하기 위한 약물 치료를 시작했어요. 혈전을 녹이는 약물과 혈액 순환을 돕는 약물이 투여되고 있습니다. 심장 전문의 선생님과 상담 후 추가적인 시술이 필요한지 결정될 예정입니다.\" : \"현재 탈수와 전해질 불균형 교정을 위해 수액 요법을 시작했어요. 인슐린 치료로 고혈당을 조절하고 있으며, 산-염기 균형을 회복하기 위한 치료도 병행됩니다. 당뇨병 전문의 선생님이 정기적으로 상태를 확인하실 거예요.\"}\n\n## 회복기\n**간호사**: 치료 후에 상태가 많이 좋아지셨네요. 앞으로의 관리 방법에 대해 알려드릴게요.\n\n**환자**: 네, 많이 나아진 것 같아요. 앞으로 어떻게 관리해야 할까요?\n\n**간호사**: ${title.includes(\"급성 심근경색\") ? \"규칙적인 약물 복용과 정기적인 검진이 중요합니다. 저지방 식이, 금연, 적절한 운동을 권장드립니다. 특히 가슴 통증이나 호흡곤란 같은 증상이 다시 나타나면 즉시 병원을 방문하셔야 합니다.\" : \"인슐린 용량 조절과 규칙적인 혈당 모니터링이 매우 중요합니다. 적절한 식이 요법과 수분 섭취, 규칙적인 검진을 통해 당뇨병 관리를 잘하셔야 합니다. 특히 케톤산증의 초기 증상을 알고 계시면 빠른 대처가 가능합니다.\"}`\n    };\n\n    // 로컬 저장소에 추가\n    tempScenarios.push(sampleScenario);\n    localStorage.setItem('tempScenarios', JSON.stringify(tempScenarios));\n\n    // 상태 업데이트\n    store.commit('SET_SCENARIOS', tempScenarios);\n    return sampleScenario;\n  } catch (error) {\n    console.error('로컬 저장소에 샘플 시나리오 저장 실패:', error);\n    return null;\n  }\n}\n\n// Vue 앱 생성 및 마운트\nconst app = createApp(App);\n\n// 전역 속성 설정 - $emitter로 접근할 수 있도록 변경\napp.config.globalProperties.$emitter = emitter;\n\n// 이전 코드와의 호환성을 위해 $mitt도 추가\napp.config.globalProperties.$mitt = emitter;\n\n// 스토어와 라우터 연결\napp.use(store);\napp.use(router);\n\n// 마운트\napp.mount('#app');\n\n// 앱 초기화 후 샘플 시나리오 생성 시도\nstore.dispatch('checkAuth').then(() => {\n  createSampleScenarios();\n});","map":{"version":3,"names":["createApp","App","router","store","mitt","axios","emitter","defaults","baseURL","process","env","VUE_APP_API_URL","createSampleScenarios","response","get","params","is_sample","withCredentials","data","length","console","log","scenario1Data","title","main_disease","personal_info","age","gender","occupation","additional_info","past_medical_history","family_history","allergies","major_symptoms","include_conversation","gptResponse1","post","headers","scenario1Error","error","saveSampleToLocalStorage","scenario2Data","gptResponse2","scenario2Error","hasSamples","checkLocalSamplesExist","localError","localScenarios","localStorage","getItem","tempScenarios","JSON","parse","some","s","e","mainDisease","sampleScenario","id","Date","now","toString","created_at","toISOString","updated_at","created_by","username","email","is_admin","includes","content","patient_conversation","push","setItem","stringify","commit","app","config","globalProperties","$emitter","$mitt","use","mount","dispatch","then"],"sources":["D:/간호시뮬레이션/frontend/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\nimport mitt from 'mitt'\r\nimport axios from 'axios'\r\n\r\n// 이벤트 버스 생성\r\nconst emitter = mitt()\r\n\r\n// API 기본 URL 설정\r\naxios.defaults.baseURL = process.env.VUE_APP_API_URL || 'http://localhost:8000'\r\n\r\n// 샘플 시나리오 생성 함수 수정 (GPT API 호출로 변경)\r\nasync function createSampleScenarios() {\r\n  try {\r\n    // 백엔드 API를 통해 샘플 시나리오가 있는지 확인\r\n    const response = await axios.get('/api/scenarios/', {\r\n      params: { is_sample: true },\r\n      withCredentials: true\r\n    });\r\n    \r\n    if (response.data.length === 0) {\r\n      console.log('샘플 시나리오 생성 시작 (GPT API 사용)');\r\n      \r\n      // 샘플 시나리오 1: 급성 심근경색 (GPT API 호출)\r\n      const scenario1Data = {\r\n        title: \"급성 심근경색 환자 간호\",\r\n        main_disease: \"급성 심근경색\",\r\n        personal_info: {\r\n          age: \"65\",\r\n          gender: \"남성\",\r\n          occupation: \"회사원\"\r\n        },\r\n        additional_info: {\r\n          past_medical_history: \"고혈압, 당뇨병\",\r\n          family_history: \"부친이 심근경색으로 사망\",\r\n          allergies: \"없음\",\r\n          major_symptoms: \"가슴 통증, 호흡곤란, 발한\"\r\n        },\r\n        include_conversation: true,\r\n        is_sample: true\r\n      };\r\n      \r\n      try {\r\n        // GPT API를 통해 시나리오 생성 \r\n        const gptResponse1 = await axios.post('/api/scenarios/generate/', scenario1Data, {\r\n          withCredentials: true,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        console.log('급성 심근경색 시나리오 생성 완료:', gptResponse1.data);\r\n        \r\n        // 이미 저장되어 있어 별도 저장 불필요\r\n      } catch (scenario1Error) {\r\n        console.error('급성 심근경색 시나리오 생성 실패:', scenario1Error);\r\n        // 실패 시에는 로컬 스토리지에 저장\r\n        saveSampleToLocalStorage(\"급성 심근경색 환자 간호\", \"급성 심근경색\");\r\n      }\r\n      \r\n      // 샘플 시나리오 2: 당뇨병성 케톤산증 (GPT API 호출)\r\n      const scenario2Data = {\r\n        title: \"당뇨병성 케톤산증 환자 간호\",\r\n        main_disease: \"당뇨병성 케톤산증\",\r\n        personal_info: {\r\n          age: \"22\",\r\n          gender: \"여성\",\r\n          occupation: \"대학생\"\r\n        },\r\n        additional_info: {\r\n          past_medical_history: \"제1형 당뇨병(10년)\",\r\n          family_history: \"없음\",\r\n          allergies: \"페니실린\",\r\n          major_symptoms: \"구갈, 다뇨, 복통, 오심, 구토\"\r\n        },\r\n        include_conversation: true,\r\n        is_sample: true\r\n      };\r\n      \r\n      try {\r\n        // GPT API를 통해 시나리오 생성\r\n        const gptResponse2 = await axios.post('/api/scenarios/generate/', scenario2Data, {\r\n          withCredentials: true,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        \r\n        console.log('당뇨병성 케톤산증 시나리오 생성 완료:', gptResponse2.data);\r\n        \r\n        // 이미 저장되어 있어 별도 저장 불필요\r\n      } catch (scenario2Error) {\r\n        console.error('당뇨병성 케톤산증 시나리오 생성 실패:', scenario2Error);\r\n        // 실패 시에는 로컬 스토리지에 저장\r\n        saveSampleToLocalStorage(\"당뇨병성 케톤산증 환자 간호\", \"당뇨병성 케톤산증\");\r\n      }\r\n      \r\n      console.log('샘플 시나리오 생성 완료');\r\n    } else {\r\n      console.log('이미 샘플 시나리오가 존재합니다');\r\n    }\r\n  } catch (error) {\r\n    console.error('샘플 시나리오 생성 중 오류 발생:', error);\r\n    \r\n    // 오류 시 로컬 저장 시도 (개발 단계에서)\r\n    try {\r\n      console.log('로컬 저장소에 샘플 시나리오 저장 시도');\r\n      \r\n      // 샘플 시나리오 로컬에 저장\r\n      const hasSamples = checkLocalSamplesExist();\r\n      if (!hasSamples) {\r\n        // 샘플 시나리오 생성 및 저장\r\n        saveSampleToLocalStorage(\"급성 심근경색 환자 간호\", \"급성 심근경색\");\r\n        saveSampleToLocalStorage(\"당뇨병성 케톤산증 환자 간호\", \"당뇨병성 케톤산증\");\r\n        console.log('로컬 저장소에 샘플 시나리오 저장 완료');\r\n      } else {\r\n        console.log('로컬 저장소에 이미 샘플 시나리오가 존재합니다');\r\n      }\r\n    } catch (localError) {\r\n      console.error('로컬 저장소에 샘플 시나리오 저장 실패:', localError);\r\n    }\r\n  }\r\n}\r\n\r\n// 로컬 샘플 존재 여부 확인 함수\r\nfunction checkLocalSamplesExist() {\r\n  try {\r\n    const localScenarios = localStorage.getItem('tempScenarios');\r\n    if (localScenarios) {\r\n      const tempScenarios = JSON.parse(localScenarios);\r\n      return tempScenarios.some(s => s.is_sample === true);\r\n    }\r\n  } catch (e) {\r\n    console.error('로컬 저장소 확인 중 오류:', e);\r\n  }\r\n  return false;\r\n}\r\n\r\n// 로컬 저장소에 샘플 시나리오 저장 함수\r\nfunction saveSampleToLocalStorage(title, mainDisease) {\r\n  try {\r\n    // 기존 로컬 시나리오 불러오기\r\n    let tempScenarios = [];\r\n    const localScenarios = localStorage.getItem('tempScenarios');\r\n    if (localScenarios) {\r\n      tempScenarios = JSON.parse(localScenarios);\r\n    }\r\n    \r\n    // 샘플 시나리오 생성\r\n    const sampleScenario = {\r\n      id: Date.now().toString(),\r\n      title: title,\r\n      main_disease: mainDisease,\r\n      is_sample: true,\r\n      created_at: new Date().toISOString(),\r\n      updated_at: new Date().toISOString(),\r\n      created_by: {\r\n        id: \"admin-user-id\",\r\n        username: \"Admin\",\r\n        email: \"admin@example.com\",\r\n        is_admin: true\r\n      },\r\n      personal_info: {\r\n        age: title.includes(\"급성 심근경색\") ? \"65세\" : \"22세\",\r\n        gender: title.includes(\"급성 심근경색\") ? \"남성\" : \"여성\",\r\n        occupation: title.includes(\"급성 심근경색\") ? \"회사원\" : \"대학생\"\r\n      },\r\n      additional_info: {\r\n        past_medical_history: title.includes(\"급성 심근경색\") \r\n          ? \"고혈압, 당뇨병\" \r\n          : \"제1형 당뇨병(10년)\",\r\n        family_history: title.includes(\"급성 심근경색\") \r\n          ? \"부친이 심근경색으로 사망\" \r\n          : \"없음\",\r\n        allergies: title.includes(\"급성 심근경색\") \r\n          ? \"없음\" \r\n          : \"페니실린\",\r\n        major_symptoms: title.includes(\"급성 심근경색\") \r\n          ? \"가슴 통증, 호흡곤란, 발한\" \r\n          : \"구갈, 다뇨, 복통, 오심, 구토\"\r\n      },\r\n      content: `# ${title} 시나리오\r\n\r\n## 환자 정보\r\n- 이름: 환자 (가명)\r\n- 나이: ${title.includes(\"급성 심근경색\") ? \"65세\" : \"22세\"}\r\n- 성별: ${title.includes(\"급성 심근경색\") ? \"남성\" : \"여성\"}\r\n- 직업: ${title.includes(\"급성 심근경색\") ? \"회사원\" : \"대학생\"}\r\n- 과거력: ${title.includes(\"급성 심근경색\") ? \"고혈압, 당뇨병\" : \"제1형 당뇨병(10년)\"}\r\n- 가족력: ${title.includes(\"급성 심근경색\") ? \"부친이 심근경색으로 사망\" : \"없음\"}\r\n- 알레르기: ${title.includes(\"급성 심근경색\") ? \"없음\" : \"페니실린\"}\r\n\r\n## 주 증상\r\n- ${mainDisease}\r\n- ${title.includes(\"급성 심근경색\") ? \"가슴 통증, 호흡곤란, 발한\" : \"구갈, 다뇨, 복통, 오심, 구토\"}\r\n\r\n## 현재 상태\r\n- 의식: 명료\r\n- 활력징후: ${title.includes(\"급성 심근경색\") ? \"BP 150/90 mmHg, HR 100 bpm, RR 22/min, SpO2 94%, BT 37.2°C\" : \"BP 110/70 mmHg, HR 120 bpm, RR 24/min, SpO2 96%, BT 37.5°C\"}\r\n\r\n## 간호 중재\r\n1. 활력징후 모니터링\r\n2. 투약 관리\r\n3. 환자 교육\r\n4. 정서적 지지\r\n5. 의사와의 협력 및 소통\r\n\r\n## 간호 평가\r\n- 증상 완화 여부\r\n- 활력징후 안정화\r\n- 환자의 자가 관리 능력 향상\r\n`,\r\n      patient_conversation: `# 환자와의 대화\r\n\r\n## 초기 평가\r\n**간호사**: 안녕하세요, 저는 오늘 담당 간호사입니다. 어떻게 지내세요? 어디가 불편하신가요?\r\n\r\n**환자**: 안녕하세요, 간호사님. ${title.includes(\"급성 심근경색\") ? \"가슴이 너무 아파서 견딜 수가 없어요. 숨도 잘 안 쉬어지고 식은땀이 나요.\" : \"계속 목이 마르고 물을 많이 마셔도 갈증이 해소가 안 돼요. 그리고 소변을 자주 봐야 해서 힘들어요. 며칠 전부터는 배도 아프고 구역감도 있어요.\"}\r\n\r\n**간호사**: 언제부터 이런 증상이 있었나요?\r\n\r\n**환자**: ${title.includes(\"급성 심근경색\") ? \"오늘 아침에 갑자기 시작됐어요. 처음에는 소화가 안 되는 줄 알았는데, 점점 심해져서 병원에 왔어요.\" : \"약 3일 전부터 시작됐어요. 평소보다 당 조절이 잘 안 되는 것 같았는데, 어제부터 급격히 상태가 나빠졌어요.\"}\r\n\r\n## 검사 및 치료 중\r\n**간호사**: 검사 결과가 나왔습니다. ${mainDisease}로 확인되었습니다. 의사 선생님께서 곧 자세한 설명과 치료 계획을 알려주실 거예요.\r\n\r\n**환자**: 그렇군요. 치료는 어떻게 진행되나요?\r\n\r\n**간호사**: ${title.includes(\"급성 심근경색\") ? \"현재 심장 손상을 최소화하기 위한 약물 치료를 시작했어요. 혈전을 녹이는 약물과 혈액 순환을 돕는 약물이 투여되고 있습니다. 심장 전문의 선생님과 상담 후 추가적인 시술이 필요한지 결정될 예정입니다.\" : \"현재 탈수와 전해질 불균형 교정을 위해 수액 요법을 시작했어요. 인슐린 치료로 고혈당을 조절하고 있으며, 산-염기 균형을 회복하기 위한 치료도 병행됩니다. 당뇨병 전문의 선생님이 정기적으로 상태를 확인하실 거예요.\"}\r\n\r\n## 회복기\r\n**간호사**: 치료 후에 상태가 많이 좋아지셨네요. 앞으로의 관리 방법에 대해 알려드릴게요.\r\n\r\n**환자**: 네, 많이 나아진 것 같아요. 앞으로 어떻게 관리해야 할까요?\r\n\r\n**간호사**: ${title.includes(\"급성 심근경색\") ? \"규칙적인 약물 복용과 정기적인 검진이 중요합니다. 저지방 식이, 금연, 적절한 운동을 권장드립니다. 특히 가슴 통증이나 호흡곤란 같은 증상이 다시 나타나면 즉시 병원을 방문하셔야 합니다.\" : \"인슐린 용량 조절과 규칙적인 혈당 모니터링이 매우 중요합니다. 적절한 식이 요법과 수분 섭취, 규칙적인 검진을 통해 당뇨병 관리를 잘하셔야 합니다. 특히 케톤산증의 초기 증상을 알고 계시면 빠른 대처가 가능합니다.\"}`\r\n    };\r\n    \r\n    // 로컬 저장소에 추가\r\n    tempScenarios.push(sampleScenario);\r\n    localStorage.setItem('tempScenarios', JSON.stringify(tempScenarios));\r\n    \r\n    // 상태 업데이트\r\n    store.commit('SET_SCENARIOS', tempScenarios);\r\n    \r\n    return sampleScenario;\r\n  } catch (error) {\r\n    console.error('로컬 저장소에 샘플 시나리오 저장 실패:', error);\r\n    return null;\r\n  }\r\n}\r\n\r\n// Vue 앱 생성 및 마운트\r\nconst app = createApp(App);\r\n\r\n// 전역 속성 설정 - $emitter로 접근할 수 있도록 변경\r\napp.config.globalProperties.$emitter = emitter;\r\n\r\n// 이전 코드와의 호환성을 위해 $mitt도 추가\r\napp.config.globalProperties.$mitt = emitter;\r\n\r\n// 스토어와 라우터 연결\r\napp.use(store);\r\napp.use(router);\r\n\r\n// 마운트\r\napp.mount('#app');\r\n\r\n// 앱 초기화 후 샘플 시나리오 생성 시도\r\nstore.dispatch('checkAuth').then(() => {\r\n  createSampleScenarios();\r\n}); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}